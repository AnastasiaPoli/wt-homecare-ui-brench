{"version":3,"sources":["images/logo_noBG.png","components/helpers/UserInfo.js","components/common/ErrorBoundary.js","history.js","apis/accesstoken.js","apis/accountauth.js","components/helpers/PermissionConstants.js","components/actions/types.js","components/actions/index.js","util/WtFields.js","components/authentication/LoginValidations.js","components/common/SystemMessages.js","components/common/MessageObject.js","components/authentication/LoginForm.js","apis/accountnoauth.js","components/actions/global-exception-handler.js","components/actions/account-actions.js","components/common/profile/ForgotPassword.js","components/common/profile/ForgotPasswordValidation.js","components/authentication/Logout.js","components/top-navigation/SettingsDropDown.js","components/top-navigation/Topbar.js","healthcare-module/Dashboard.js","components/top-navigation/BreadCrumb.js","components/common/my-profile/UserValidation.js","components/common/my-profile/MyProfile.js","components/common/my-profile/ChangePassword.js","components/helpers/PermittedRoutes.js","components/common/feedback/GiveFeedback.js","healthcare-module/dashboard/HealthcareDashboard.jsx","healthcare-module/resident/ResidentHome.jsx","healthcare-module/group/GroupReducer.js","components/DeleteConfirmation.jsx","healthcare-module/group/GroupList.jsx","healthcare-module/community/CommunityReducer.js","healthcare-module/group/GroupForm.jsx","healthcare-module/group/GroupAdd.jsx","healthcare-module/group/GroupEdit.jsx","healthcare-module/community/CommunityList.jsx","healthcare-module/community/CommunityForm.jsx","healthcare-module/community/CommunityAdd.jsx","healthcare-module/community/CommunityEdit.jsx","healthcare-module/report/HealthcareReportHome.jsx","healthcare-module/HealthcareHome.jsx","healthcare-module/HealthcareSettings.jsx","components/ScrollToTop.js","Routes.js","components/Footer.jsx","App.js","reportWebVitals.js","components/reducers/index.js","components/reducers/authenticationReducer.js","components/reducers/systemMessageReducer.js","components/reducers/adminDashboardReducer.js","components/reducers/usermanagementReducer.js","components/reducers/accountReducer.js","index.js"],"names":["getUserProfile","data","decodePayloadToken","undefined","scope","getssoId","token","ssoId","getToken","sessionStorage","getItem","JSON","parse","access_token","getPermissions","authorities","payload","split","window","atob","getSubscription","sub","logo","require","ErrorBoundary","props","state","error","errorInfo","this","setState","Fragment","AppBar","position","Toolbar","variant","Typography","color","width","height","src","alt","Container","maxWidth","className","style","whiteSpace","children","React","Component","createBrowserHistory","axios","create","baseURL","process","transformRequest","headers","btoa","username","password","form","FormData","set","grant_type","stringify","permissionConstants","ADMIN_ROLE","EMPLOYEE_ROLE","REPORT_PERMISSION","HEALTH_PERMISSION","TIMECLOCKMANAGER_PERMISSION","NURSINGASSISTANT_PERMISSION","SCHEDULER_PERMISSION","USERMANAGER_PERMISSION","ACCOUNTMANAGER_PERMISSION","LOGIN","LOGOUT","SYSTEM_MESSAGE","ADMIN_DASHBOARD","FETCH_USER","FETCH_PLAN_INFO","CHANGE_MY_PASSWORD","GIVE_FEEDBACK","SAVE_MY_PROFILE","defaultErrorObject","message","statusCode","messageType","invalidCredentials","loginAction","formValues","dispatch","a","post","response","status","hasOwnProperty","respData","setItem","role","payloadData","accountauth","get","response2","activity","subscription","scheduler","schedulePlan","timeclock","timeclockPlan","healthcarePlan","modules","user","passwordUpdated","history","push","type","errorMessage","renderTextFieldEdit","field","touched","errors","TextField","label","placeholder","hasEditErrorMessage","id","margin","fullWidth","helperText","displayErrorMessageEdit","renderTextFieldSelect","select","renderTextArea","multiline","rows","renderPasswordField","theField","name","msg","Object","getOwnPropertyDescriptor","fontSize","value","ALLOWED_CHARACTERS","loginValidations","loginValidationSchema","yup","min","max","matches","required","shape","SystemMessages","useState","open","setOpen","msgContent","Collapse","in","Alert","severity","msgType","action","IconButton","aria-label","size","onClick","align","otherComponents","displaySystemMessage","LoginForm","loading","submitForm","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","submit","green","backgroundColor","buildLoginForm","CircularProgress","initialValues","validationSchema","enableReinitialize","onSubmit","values","handleChange","noValidate","autoComplete","padding","component","marg","Button","prevProps","prevState","snapshot","Grid","container","item","xs","md","fontWeight","authentication","Paper","elevation","marginLeft","Avatar","connect","handleException","dispatchType","captchaSiteKey","ForgotPassword","recaptchaToken","verifyCallback","renderField","formProps","renderError","input","meta","captchaToken","forgotPasswordAction","renderFormView","handleSubmit","Field","href","Link","sitekey","invalid","forgotPassword","formWrapped","reduxForm","validate","length","test","getState","accountnoauth","Logout","removeItem","SettingsDropDown","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","renderHealthcareLinks","permissions","indexOf","to","textDecoration","MenuItem","ref","aria-controls","aria-haspopup","textTransform","Popper","zIndex","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","grow","flexGrow","title","breakpoints","up","search","borderRadius","marginRight","inputInput","paddingLeft","transitions","sectionDesktop","sectionMobile","TopBar","classes","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","onClose","mobileMenuId","renderMobileMenu","Divider","edge","linkItem","mbile","cls","returnLink","renderSettings","currentTarget","Dashboard","Card","CardActionArea","CardContent","gutterBottom","CardActions","BreadCrumb","renderParentCrumb","activeParentLink","activeParentLabel","renderChildCrumb","activeChildLink","aria-current","activeChildLabel","renderSchedulesButtons","minHeight","Breadcrumbs","float","EMAIL_CHARACTERS","editMyProfileValidations","userValidationSchema","firstName","lastName","email","otherNames","changePasswordValidations","existingPassword","passwordConfirm","parent","MyProfile","renderEditForm","thisUser","umgr","userInfo","console","log","saveMyProfileActions","loadSingleUserDetails","ChangePassword","updateMyPasswordActions","aDashboard","permittedRoutes","adminRoutes","url","employeeRoutes","commonRoutes","GiveFeedback","submitFeedbackForm","sendFeedback","renderFeedbackForm","messageTitle","messageContent","account","feedback","HealthcareDashboard","ResidentHome","GROUP_ACTIONS","initialState","groupList","group","total","axiosInstance","REACT_APP_HEALTHCARE_URL","fetchGroupList","then","object","catch","Transition","forwardRef","Slide","direction","DeleteConfirmation","onApply","confirmationInput","setConfirmationInput","Dialog","TransitionComponent","DialogTitle","DialogContent","DialogContentText","autoFocus","onChange","DialogActions","disabled","marginTopBottom","marginBottom","MyMapComponent","compose","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","markers","map","marker","index","handleClick","lat","lng","selectUser","options","closeBoxURL","enableEventPropagation","clsx","card","location","URL","CardMedia","media","image","imageUrl","root","cardContent","groupName","groupStreet","GroupList","useDispatch","setLat","setLng","setSelectUser","showInfoWindow","setShowInfoWindow","useSelector","columns","filter","sort","setCellHeaderProps","print","textAlign","customBodyRender","tableMeta","updateValue","justify","startIcon","handleDeleteGroup","showSuccess","setShowSuccess","setMessage","setTimeout","setGroup","find","hgid","setDialogOpen","dialogOpen","AddGroupButton","navigator","geolocation","getCurrentPosition","c","coords","latitude","longitude","fetchLocation","filterType","selectableRows","responsive","rowsPerPage","rowsPerPageOptions","mapElement","containerElement","loadingElement","googleMapURL","delete","params","COMMUNITY_ACTIONS","communityList","community","fetchCommunityList","GroupForm","useHistory","countryList","schema","cid","groupCountry","groupState","groupCity","groupDescription","typeError","nullable","put","updateGroup","companyId","apcId","addGroup","showError","setShowError","groupZipCode","xl","communityName","getNames","country","GroupAdd","GroupEdit","useParams","fetchGroup","communityAddress","CommunityList","handleDeleteCommunity","setCommunity","AddCommunityButton","CommunityForm","communityCountry","communityState","communityCity","communityStreet","communityDescription","updateCommunity","addCommunity","communityZipCode","CommunityAdd","CommunityEdit","fetchCommunity","HealthcareReportHome","content","drawer","flexShrink","drawerPaper","drawerContainer","overflow","HealthcareHome","Drawer","List","ListItem","button","NavLink","ListItemText","primary","exact","path","HealthcareSettings","ScrollToTop","useLocation","scrollTo","pathname","PrivateRoute","rest","roles","render","currentUser","from","userPermissions","thisRoute","requiredPermissions","startsWith","key3","key2","key4","k","getRolesApplicableToThisRoute","match","Routes","CssBaseline","Footer","transform","createMuiTheme","palette","main","secondary","orange","warning","info","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","formReducer","systemMessage","changeMyPassword","saveMyProfile","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.07a6946f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_noBG.f4a91b45.png\";","export const getUserProfile = () => {\n  let data = decodePayloadToken();\n  if (data !== null && data !== undefined) {\n    return data.scope[0];\n  }\n  return null;\n};\n\nexport const getssoId = () => {\n  let token = decodePayloadToken();\n  if (token !== null && token !== undefined) {\n    return token.ssoId;\n  }\n  return null;\n};\n\nexport const getToken = () => {\n  let token = sessionStorage.getItem('authUser');\n  if (token !== null && token !== undefined) {\n    return JSON.parse(token).access_token;\n  }\n};\n\nexport const getPermissions = () => {\n  let token = decodePayloadToken();\n  if (token !== null && token !== undefined) {\n    return token.authorities;\n  }\n  return null;\n};\n\nexport const getApcId = () => {\n  let token = decodePayloadToken();\n  if (token !== null && token !== undefined) {\n    return token.user.apcId;\n  }\n};\n\nexport const getDepartmentId = () => {\n  let token = decodePayloadToken();\n  if (token !== null && token !== undefined) {\n    return token.user.departmentId;\n  }\n};\n\nexport const decodePayloadToken = () => {\n  let token = sessionStorage.getItem('authUser');\n  token = JSON.parse(token);\n  if (token !== null && token !== undefined) {\n    let payload = token.access_token.split('.')[1];\n    return JSON.parse(window.atob(payload));\n  }\n  return null;\n};\n\nexport const getSubscription = () => {\n  let sub = sessionStorage.getItem('subscription');\n  if (sub !== null && sub !== undefined) {\n    return JSON.parse(sub);\n  }\n};\n\nexport const getAllUserModules = () => {\n  let mod = sessionStorage.getItem('modules');\n  if (mod !== null && mod !== undefined) {\n    return JSON.parse(mod);\n  }\n};\n\nexport const userHasModuleAccess = (moduleCode) => {\n  let modules = getAllUserModules();\n  if (modules !== null && modules !== undefined) {\n    for (let key in modules) {\n      if (module[key].productCode === moduleCode) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","import React from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nconst logo = require('../../images/logo_noBG.png');\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        })\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                    <React.Fragment>\n                        <AppBar position=\"static\">\n                            <Toolbar variant=\"dense\">\n                                <Typography variant=\"h6\" color=\"inherit\">\n                                    <img width={30} height={30} src={logo} alt=\"Worktrim Logo\" />\n                                </Typography>\n\n                                <Typography variant=\"h6\" color=\"inherit\">\n                                    Worktrim\n                                </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <br /><br />\n                        <Container  maxWidth=\"sm\" className =\"app-body-content\">\n                            <div>\n                                <h2 className=\"danger\">Something went wrong.</h2>\n                                <details style={{ whiteSpace: 'pre-wrap' }}>\n                                    Please try again later or contact support;\n\n                                </details>\n                            </div>\n                        </Container>\n                    </React.Fragment>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","\nimport { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import axios from \"axios\";\n\n\nexport default axios.create({\n    baseURL : process.env.REACT_APP_ACCESS_TOKEN_URL,\n    transformRequest: [function (data, headers) {\n        let  token = window.btoa(data.username+':'+data.password);\n        headers['Authorization'] = `Basic ${token}`;\n\n        let form = new FormData();\n        form.set('password', data.password);\n        form.set('username', data.username);\n        form.set('grant_type', data.grant_type);\n        //form.set('client_id', data.username);\n\n        return form;\n    }],\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    }\n\n});\n\n","import axios from 'axios';\nimport {getToken, getssoId} from \"../components/helpers/UserInfo\";\n\n\nexport default axios.create({\n    baseURL : process.env.REACT_APP_WT_ACCOUNT_URL,\n    transformRequest: [function (data, headers) {\n        const token = getToken();\n        const ssoId =  getssoId();\n\n        headers['Authorization'] = `Bearer ${token}`;\n        headers['UID'] = `${ssoId}`;\n        return JSON.stringify(data);\n    }],\n    headers: {\n        'Content-Type': 'application/json'\n    }\n\n});\n","\nexport const permissionConstants = {\n\n    role : {\n             ADMIN_ROLE : \"ADMIN\",\n             EMPLOYEE_ROLE : \"EMPLOYEE\"\n          },\n\n    permissions : {\n            REPORT_PERMISSION : \"REPORT\",\n            HEALTH_PERMISSION : \"HEALTH\",\n            TIMECLOCKMANAGER_PERMISSION : \"TIMECLOCKMANAGER\",\n            NURSINGASSISTANT_PERMISSION : \"NURSINGASSISTANT\",\n            SCHEDULER_PERMISSION : \"SCHEDULER\",\n            USERMANAGER_PERMISSION : \"USERMANAGER\",\n            ACCOUNTMANAGER_PERMISSION : \"ACCOUNTMANAGER\"\n         }\n\n}","\nexport const LOGIN= 'LOGIN';\nexport const LOGOUT= 'LOGOUT';\nexport const SYSTEM_MESSAGE = 'SYSTEM_MESSAGE';\nexport const ADMIN_DASHBOARD = 'ADMIN_DASHBOARD';\nexport const INIT_ADDUSER_INFO = 'INIT_ADDUSER_INFO';\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_PLAN_INFO = 'FETCH_PLAN_INFO';\nexport const CHANGE_MY_PASSWORD ='CHANGE_MY_PASSWORD';\nexport const FETCH_MY_SCHEDULES = 'FETCH_MY_SCHEDULES';\nexport const GIVE_FEEDBACK = 'GIVE_FEEDBACK';\nexport const SHIFT_TRADE = 'SHIFT_TRADE';\nexport const SAVE_MY_PROFILE = 'SAVE_MY_PROFILE';\nexport const UPDATE_MY_PASSWORD = 'UPDATE_MY_PASSWORD';\nexport const SAVE_USER = 'SAVE_USER';\n\n","import history from '../../history';\nimport token from '../../apis/accesstoken';\nimport accountauth from '../../apis/accountauth';\n\nimport { permissionConstants } from '../helpers/PermissionConstants';\n\nimport { LOGIN } from './types';\n\nconst defaultErrorObject = {\n  message: 'Could not connect to authentication service. Please try again later',\n  statusCode: 'OK',\n  messageType: 'error',\n  token: null\n};\n\nconst invalidCredentials = {\n  message: 'Wrong Username or Password',\n  statusCode: 'BAD_REQUEST',\n  messageType: 'error',\n  token: null\n};\n\nexport const loginAction = (formValues) => async (dispatch) => {\n  try {\n    let response;\n    response = await token.post('/auth/userLogin', { ...formValues });\n    if (response.status === 200 && response.data.hasOwnProperty('access_token')) {\n      let respData = response.data;\n      sessionStorage.setItem('authUser', JSON.stringify(response.data));\n      let role = null;\n      let payload = respData.access_token.split('.')[1];\n      let payloadData = JSON.parse(window.atob(payload));\n      role = payloadData.scope[0];\n\n      let response2 = await accountauth.get('/current-user');\n\n      if (response2.status === 200 && response2.data != null) {\n        let activity = response2.data.activity;\n        let subscription = {\n          scheduler: response2.data.schedulePlan,\n          timeclock: response2.data.timeclockPlan,\n          healthcarePlan: response2.data.healthcarePlan\n        };\n\n        //add subscription info to session\n        sessionStorage.setItem('subscription', JSON.stringify(subscription));\n        //add modules to session\n        sessionStorage.setItem('modules', JSON.stringify(response2.data.modules));\n        sessionStorage.setItem('user', JSON.stringify(response2.data.user));\n\n        if (activity !== null && activity.passwordUpdated === 'Y') {\n          history.push('/change-password');\n        } else {\n          //send them to dashboard or logout\n          if (role === permissionConstants.role.ADMIN_ROLE || role === permissionConstants.role.EMPLOYEE_ROLE) {\n            //Lets now dispatch data to store\n            dispatch({ type: LOGIN, payload: respData });\n            history.push('/dashboard');\n          } else {\n            history.push('/login');\n          }\n        }\n      } else {\n        //send them to dashboard or logout\n        if (role === permissionConstants.role.ADMIN_ROLE || role === permissionConstants.role.EMPLOYEE_ROLE) {\n          history.push('/dashboard');\n        } else {\n          history.push('/login');\n        }\n      }\n    }\n  } catch (error) {\n    if (error.response !== undefined) {\n      if (error.response.status === 401) {\n        dispatch({ type: LOGIN, payload: { errorMessage: invalidCredentials } });\n      } else {\n        dispatch({ type: LOGIN, payload: { errorMessage: error.response.data } });\n      }\n    } else {\n      dispatch({ type: LOGIN, payload: { errorMessage: defaultErrorObject } });\n    }\n  }\n};\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Switch from '@material-ui/core/Switch';\n\nexport const renderTextField = ({ label, input, meta: { touched, invalid, error }, ...custom }) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n    margin=\"dense\"\n    fullWidth\n    variant=\"outlined\"\n  />\n);\n\nexport const renderRadioButton = ({ input, meta: { touched, error }, children, ...rest }) => (\n  <FormControl error={hasErrorMessage({ touched, error })}>\n    {displayErrorMessage({ touched, error })}\n    <RadioGroup {...input} {...rest} onChange={input.onChange}>\n      {children}\n    </RadioGroup>\n  </FormControl>\n);\n\nexport const renderCheckbox = ({ input, label }) => (\n  <div>\n    <FormControlLabel\n      control={<Checkbox checked={input.value ? true : false} onChange={input.onChange} color=\"primary\" />}\n      label={label}\n    />\n  </div>\n);\n\nexport const renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\n  <FormControl error={hasErrorMessage({ touched, error })} variant=\"outlined\">\n    <Select margin=\"dense\" native {...input} {...custom} inputProps={{ name: input.name, id: 'dep' }}>\n      {children}\n    </Select>\n    {displayErrorMessage({ touched, error })}\n  </FormControl>\n);\n\n/**********************************************\n\n FORMIK Fields\n ***********************************************/\n\nexport const renderTextFieldEdit = ({ field, form: { touched, errors }, ...props }) => (\n  <TextField\n    label={field.label}\n    placeholder={field.label}\n    error={hasEditErrorMessage(touched, errors, field)}\n    id={field.id}\n    {...field}\n    {...props}\n    margin={field.margin !== null && field.margin !== undefined ? field.margin : 'dense'}\n    fullWidth={true}\n    variant=\"outlined\"\n    helperText={displayErrorMessageEdit(touched, errors, field)}\n  />\n);\n\nexport const renderTextFieldSelect = ({ field, form: { touched, errors }, children, ...props }) => (\n  <TextField\n    select\n    label={field.label}\n    placeholder={field.label}\n    error={hasEditErrorMessage(touched, errors, field)}\n    id={field.id}\n    {...field}\n    {...props}\n    margin={field.margin !== null && field.margin !== undefined ? field.margin : 'dense'}\n    fullWidth={true}\n    variant=\"outlined\"\n    helperText={displayErrorMessageEdit(touched, errors, field)}\n  >\n    {children}\n  </TextField>\n);\n\nexport const renderTextArea = ({ field, form: { touched, errors }, ...props }) => (\n  <TextField\n    label={field.label}\n    placeholder={field.label}\n    error={hasEditErrorMessage(touched, errors, field)}\n    id={field.id}\n    {...field}\n    {...props}\n    fullWidth={true}\n    variant=\"outlined\"\n    multiline={true}\n    rows={4}\n    helperText={displayErrorMessageEdit(touched, errors, field)}\n  />\n);\n\nexport const renderTimePicker = ({ field, form: { touched, errors }, ...props }) => (\n  <TextField\n    label={field.label}\n    placeholder={field.label}\n    error={hasEditErrorMessage(touched, errors, field)}\n    id={field.id}\n    {...field}\n    {...props}\n    fullWidth={false}\n    variant=\"outlined\"\n    type=\"time\"\n    InputLabelProps={{\n      shrink: true\n    }}\n    inputProps={{\n      step: 300 // 5 min\n    }}\n    helperText={displayErrorMessageEdit(touched, errors, field)}\n  />\n);\n\nexport const renderPasswordField = ({ field, form: { touched, errors }, ...props }) => (\n  <TextField\n    label={field.label}\n    placeholder={field.label}\n    error={hasEditErrorMessage(touched, errors, field)}\n    id={field.id}\n    {...field}\n    {...props}\n    margin={field.margin !== null && field.margin !== undefined ? field.margin : 'dense'}\n    fullWidth={true}\n    variant=\"outlined\"\n    type=\"password\"\n    helperText={displayErrorMessageEdit(touched, errors, field)}\n  />\n);\n\nexport const renderRadioButtonEdit = ({ field, form: { touched, errors }, children, ...props }) => (\n  <FormControl error={hasEditErrorMessage(touched, errors, field)}>\n    <RadioGroup {...field} {...props} onChange={field.onChange}>\n      {children}\n    </RadioGroup>\n    {displayErrorMessageEdit(touched, errors, field)}\n  </FormControl>\n);\n\nexport const renderSelectFieldEdit = ({ field, form: { touched, errors }, children, ...props }) => (\n  <FormControl error={hasEditErrorMessage(touched, errors, field)} variant=\"outlined\">\n    <Select margin=\"dense\" native={true} {...field} {...props} inputProps={{ name: field.name, id: field.name }}>\n      {children}\n    </Select>\n    {displayErrorMessageEdit(touched, errors, field)}\n  </FormControl>\n);\n\nexport const renderSelectFieldClassic = ({ field, form: { touched, errors }, children, ...props }) => (\n  <FormControl\n    error={hasEditErrorMessage(touched, errors, field)}\n    variant={field.variant}\n    fullWidth={field.fullwidth}\n    size={field.size}\n  >\n    <Select margin={field.margin} native={true} {...field} {...props} inputProps={{ name: field.name, id: field.name }}>\n      {children}\n    </Select>\n    {displayErrorMessageEdit(touched, errors, field)}\n  </FormControl>\n);\n\nexport const renderCheckboxEdit = ({ field, form: { touched, errors }, ...props }) => (\n  <div>\n    <FormControlLabel\n      className={props.className}\n      control={\n        <Checkbox\n          checked={field.value ? true : false}\n          onChange={field.onChange}\n          color=\"primary\"\n          name={field.name}\n          id={field.name}\n        />\n      }\n      label={props.label}\n    />\n  </div>\n);\n\nexport const renderSwitch = ({ field, form: { touched, errors }, ...props }) => (\n  <div>\n    <FormControlLabel\n      className={props.className}\n      control={\n        <Switch\n          checked={field.value ? true : false}\n          onChange={field.onChange}\n          color=\"primary\"\n          name={field.name}\n          id={field.name}\n        />\n      }\n      label={props.label}\n    />\n  </div>\n);\n\nconst hasEditErrorMessage = (touched, errors, field) => {\n  let theField = field.name;\n  if (errors.hasOwnProperty(theField) && touched.hasOwnProperty(theField)) {\n    return true;\n  }\n  return false;\n};\n\nconst displayErrorMessageEdit = (touched, errors, field) => {\n  let theField = field.name;\n  if (errors.hasOwnProperty(theField) && touched.hasOwnProperty(theField)) {\n    const msg = Object.getOwnPropertyDescriptor(errors, theField);\n    return (\n      <span>\n        {' '}\n        <WarningIcon fontSize=\"small\" /> {msg.value}\n      </span>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst hasErrorMessage = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst displayErrorMessage = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return (\n      <FormHelperText>\n        {' '}\n        <WarningIcon fontSize=\"small\" /> {touched && error}\n      </FormHelperText>\n    );\n  }\n};\n","\nimport * as yup from \"yup\";\n\nconst ALLOWED_CHARACTERS = /^[a-zA-Z0-9- ,_.]*$/;\n\nexport const loginValidations = () => {\n\n    let loginValidationSchema = {\n        username : yup\n            .string()\n            .min(3, 'should be at least 3 characters')\n            .max(25, \"must be less than 25 charaters\")\n            .matches(ALLOWED_CHARACTERS, \"Special characters are not allowed\")\n            .required(\"Please Enter username.\"),\n\n\n\n        password : yup\n            .string()\n            .required(\"Please Provide Password\"),\n\n    };\n\n    return yup.object().shape(loginValidationSchema);\n\n}\n\n\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from \"@material-ui/core/Typography\";\n\n\n const SystemMessages = props =>  {\n     const [open, setOpen] = React.useState(true);\n\n        if (props.msgContent !== undefined && props.msgContent !== null) {\n            return (\n                 <div>\n                     <Collapse in={open}>\n                         <Alert\n                             variant=\"filled\"\n                             severity={props.msgType}\n                             action={\n                                 <IconButton\n                                     aria-label=\"close\"\n                                     color=\"inherit\"\n                                     size=\"small\"\n                                     onClick={() => {\n                                         setOpen(false);\n                                     }}\n                                 >\n                                     <CloseIcon fontSize=\"inherit\" />\n                                 </IconButton>\n                             }\n                         >\n                             <Typography align=\"center\">\n                                 {props.msgContent} {props.otherComponents}\n                             </Typography>\n                         </Alert>\n                     </Collapse>\n                     <br />\n                </div>\n            );\n        }else{\n            return null;\n        }\n\n\n\n}\n\n\nexport default SystemMessages;\n","import React from \"react\";\nimport SystemMessages from \"./SystemMessages\";\n\n\nexport const displaySystemMessage = (props) => {\n\n    if(props !== undefined && props !== null) {\n        if (props.errorMessage !== undefined) {\n            return (<SystemMessages msgType={props.errorMessage.messageType} msgContent={props.errorMessage.message}/>);\n        } else if (props.message !== null) {\n            return (<SystemMessages msgType={props.messageType} msgContent={props.message}/>);\n        } else {\n            return null;\n        }\n    }\n\n    return null;\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, Form, Formik } from 'formik';\nimport {\n  AppBar,\n  Avatar,\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport { loginAction } from '../actions';\nimport history from '../../history';\nimport { permissionConstants } from '../helpers/PermissionConstants';\nimport { getUserProfile } from '../helpers/UserInfo';\nimport { renderPasswordField, renderTextFieldEdit } from '../../util/WtFields';\nimport { loginValidations } from './LoginValidations';\nimport { displaySystemMessage } from '../common/MessageObject';\nimport logo from '../../images/logo_noBG.png';\n\nclass LoginForm extends React.Component {\n  state = { loading: false };\n\n  componentDidMount() {\n    let role = getUserProfile();\n    if (role === permissionConstants.role.EMPLOYEE_ROLE || role === permissionConstants.role.ADMIN_ROLE) {\n      history.push('/dashboard');\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.loading) {\n      this.setState({ loading: false });\n    }\n  }\n\n  submitForm = (formValues) => {\n    this.setState({ loading: true });\n    formValues.grant_type = 'password';\n\n    this.props.loginAction(formValues);\n  };\n\n  useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    green: {\n      color: '#fff',\n      backgroundColor: '#008080'\n    }\n  }));\n\n  buildLoginForm = () => {\n    if (!this.state.loading) {\n      return (\n        <Formik\n          initialValues={{\n            username: '',\n            password: ''\n          }}\n          validationSchema={loginValidations}\n          enableReinitialize={true}\n          onSubmit={(values) => {\n            this.submitForm(values);\n          }}\n        >\n          {({ errors, handleChange, touched }) => (\n            <Form id=\"apc_login\" noValidate autoComplete=\"off\" style={{ padding: '25px' }}>\n              <br />\n              <br />\n              <Field\n                name=\"username\"\n                component={renderTextFieldEdit}\n                label=\"Username *\"\n                id=\"username\"\n                type=\"text\"\n                marg=\"none\"\n              />\n              <br />\n              <br />\n              <Field\n                name=\"password\"\n                component={renderPasswordField}\n                label=\"Password *\"\n                id=\"password\"\n                type=\"password\"\n                marg=\"none\"\n              />\n              <br /> <br />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                Sign in\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <CircularProgress size={80} />\n          <div>... Processing your request</div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Grid container spacing={2}>\n              <Grid item xs={3} md={3}>\n                <div>\n                  <img width={30} height={30} src={logo} alt=\"Worktrim Logo\" />\n                  <span style={{ fontSize: '24px', fontWeight: 'bold' }}>Worktrim</span>\n                </div>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"xl\" className=\"app-body-content\">\n          {displaySystemMessage(this.props.authentication)}\n          <Container component=\"main\" maxWidth=\"sm\">\n            <Paper elevation={4}>\n              <div style={{ marginLeft: '45%' }}>\n                <Avatar style={{ backgroundColor: 'orange' }}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" style={{ marginLeft: '-5%' }}>\n                  Sign in\n                </Typography>\n              </div>\n\n              {this.buildLoginForm()}\n              <br />\n            </Paper>\n          </Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\nexport default connect(mapStateToProps, { loginAction })(LoginForm);\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL : process.env.REACT_APP_WT_ACCOUNT_URL\n});","\nexport const handleException = (dispatch, error, dispatchType, defaultErrorObject) => {\n    if(error.response !== undefined ){\n        dispatch({type: dispatchType, payload: {errorMessage : error.response.data} });\n    }else {\n        dispatch({type: dispatchType, payload: {errorMessage : defaultErrorObject} });\n    }\n}","import history from '../../history';\nimport accountauth from '../../apis/accountauth';\nimport accountnoauth from '../../apis/accountnoauth';\n\nimport {\n  CHANGE_MY_PASSWORD,\n  FETCH_USER,\n  GIVE_FEEDBACK,\n  INIT_ADDUSER_INFO,\n  LOGIN,\n  SAVE_MY_PROFILE,\n  SAVE_USER\n} from './types';\n\nimport { handleException } from './global-exception-handler';\n\nconst defaultErrorObject = {\n  message: 'Could not connect to account service. Please try again later',\n  statusCode: 'OK',\n  messageType: 'error',\n  token: null\n};\n\nexport const forgotPasswordAction = (formValues) => async (dispatch, getState) => {\n  try {\n    let response = await accountnoauth.post('/auth/forgotPassword', { ...formValues });\n    if (response && response.data != null) {\n      dispatch({ type: LOGIN, payload: { forgotPassword: response.data } });\n      history.push('/login');\n    } else {\n      dispatch({ type: LOGIN, payload: { errorMessage: response.data } });\n    }\n  } catch (error) {\n    handleException(dispatch, error, LOGIN, defaultErrorObject);\n  }\n};\n\nexport const loadUserDetailsSelfReg = (ssoid) => async (dispatch) => {\n  try {\n    const response = await accountnoauth.get(`/auth/findUser/${ssoid}`);\n\n    if (response && response.data != null) {\n      dispatch({ type: FETCH_USER, payload: response.data });\n    }\n  } catch (error) {\n    handleException(dispatch, error, FETCH_USER, defaultErrorObject);\n  }\n};\n\n//add-user-get\n\nexport const loadRequiredNewUserInfo = () => async (dispatch) => {\n  try {\n    let response = await accountauth.get('/admin/add-user-get');\n    if (response && response.data != null) {\n      dispatch({ type: INIT_ADDUSER_INFO, payload: response.data });\n    }\n  } catch (error) {\n    handleException(dispatch, error, INIT_ADDUSER_INFO, defaultErrorObject);\n  }\n};\n\nexport const addNewUserAction = (formValues) => async (dispatch) => {\n  try {\n    let response = await accountauth.post('/admin/save-user', { ...formValues });\n    if (response && response.data != null) {\n      if (formValues.ssoId !== null && formValues.ssoId !== undefined) {\n        dispatch({ type: SAVE_USER, payload: response.data });\n      } else {\n        history.push('/manage-users');\n      }\n    }\n  } catch (error) {\n    handleException(dispatch, error, SAVE_USER, defaultErrorObject);\n  }\n};\n\nexport const loadSingleUserDetails = () => async (dispatch) => {\n  try {\n    const response = await accountauth.get('/current-user');\n\n    if (response && response.data != null) {\n      dispatch({ type: FETCH_USER, payload: response.data });\n    }\n  } catch (error) {\n    handleException(dispatch, error, FETCH_USER, defaultErrorObject);\n  }\n};\n\nexport const saveMyProfileActions = (formValues) => async (dispatch) => {\n  try {\n    let response = await accountauth.post('/save-profile-edit', { ...formValues });\n    if (response && response.data != null) {\n      dispatch({ type: SAVE_MY_PROFILE, payload: response.data });\n    }\n  } catch (error) {\n    handleException(dispatch, error, SAVE_MY_PROFILE, defaultErrorObject);\n  }\n};\n\nexport const updateMyPasswordActions = (formValues) => async (dispatch) => {\n  try {\n    let response = await accountauth.post('/save-password-change', { ...formValues });\n    if (response && response.data != null) {\n      dispatch({ type: CHANGE_MY_PASSWORD, payload: response.data });\n    }\n  } catch (error) {\n    handleException(dispatch, error, CHANGE_MY_PASSWORD, defaultErrorObject);\n  }\n};\n\nexport const sendFeedback = (formValues) => async (dispatch) => {\n  try {\n    let response = await accountauth.post('/give-us-feedback', { ...formValues });\n    if (response && response.data != null) {\n      dispatch({ type: GIVE_FEEDBACK, payload: response.data });\n    }\n  } catch (error) {\n    handleException(dispatch, error, GIVE_FEEDBACK, defaultErrorObject);\n  }\n};\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {forgotPasswordAction} from \"../../actions/account-actions\";\nimport {validatePasswordForgotForm} from \"./ForgotPasswordValidation\";\nimport {ReCaptcha} from \"react-recaptcha-v3\";\nimport {displaySystemMessage} from \"../MessageObject\";\n\n\nconst logo = require('../../../images/logo_noBG.png');\nconst captchaSiteKey= '6LcrYawUAAAAAEyAjgJo7jfrWBqVYKKU2jbUxwo_';\n\nclass ForgotPassword extends React.Component{\n\n    state = {\n        loading : false,\n        recaptchaToken : ''\n    };\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(prevState.loading){\n            this.setState({loading: false});\n        }\n    }\n\n    verifyCallback = (recaptchaToken) => {\n        if(recaptchaToken !== null && recaptchaToken !== undefined) {\n            this.setState({recaptchaToken: recaptchaToken});\n        }\n    }\n\n    renderError(formProps){\n        if(formProps.meta.touched  && formProps.meta.invalid){\n            return true;\n        }\n        return false;\n    }\n\n    renderField = (formProps) => {\n        return(\n            <TextField\n                id={formProps.id}\n                label={formProps.label}\n                variant=\"outlined\"\n                error = {this.renderError(formProps)}\n                {...formProps.input}\n                helperText= {formProps.meta.touched ? formProps.meta.error : \"\"}\n                fullWidth\n                type={formProps.type}\n            />\n\n        );\n    };\n\n\n    submitForm = formValues => {\n        this.setState({loading:true});\n\n        //Add any other form values\n        formValues.captchaToken = this.state.recaptchaToken;\n\n        this.props.forgotPasswordAction(formValues);\n\n\n\n    }\n\n\n    useStyles = makeStyles((theme) => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        green: {\n            color: '#fff',\n            backgroundColor: '#008080',\n        },\n    }));\n\n\n    renderFormView = () => {\n\n        if(!this.state.loading){\n            return(\n                <Paper elevation={4}>\n                    <div style={{marginLeft:'45%'}}>\n                        <Avatar style={{backgroundColor :'orange'}}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\" style={{marginLeft:'-22%'}}>\n                            Enter your User ID\n                        </Typography>\n                    </div>\n                    <form id=\"create\" noValidate autoComplete=\"off\" style={{padding:'25px'}} onSubmit={this.props.handleSubmit(this.submitForm)}>\n                        <Field name = \"username\" component={this.renderField} label=\"User ID *\"  type=\"text\" id=\"username\"/>\n\n                        <br/><br/>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>Submit</Button>\n                        <br/>  <br/>\n                        <small>This site is protected by reCAPTCHA and the Google\n                            <a href=\"https://policies.google.com/privacy\"> Privacy Policy</a> and\n                            <a href=\"https://policies.google.com/terms\"> Terms of Service</a> apply.\n                        </small>\n                        <br/>  <br/>\n                        <Grid>\n                            <Link href=\"/login\">\n                                <KeyboardBackspaceIcon /> Back to Login\n                            </Link>\n                        </Grid>\n\n                        <ReCaptcha\n                            sitekey={captchaSiteKey}\n                            action='company_registration'\n                            verifyCallback={this.verifyCallback}\n                        />\n                    </form>\n\n\n                    <br />\n                </Paper>\n            );\n        }else{\n            return(\n                <div>\n                    <br/><br/><br/><br/><br/>\n                    <CircularProgress size={80} />\n                    <div>...Processing your request</div>\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\">\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            <img width={30} height={30} src={logo} alt=\"Worktrim Logo\" />\n                        </Typography>\n\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Worktrim\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <Container  maxWidth=\"xl\" className =\"app-body-content\">\n                    {displaySystemMessage(this.props.forgotPassword)}\n                    <Container component=\"main\" maxWidth=\"sm\">\n                        {this.renderFormView()}\n                    </Container>\n                </Container>\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nconst formWrapped = reduxForm({\n    form : 'forgot_password_form',\n    validate : validatePasswordForgotForm,\n})(ForgotPassword);\n\nconst  mapSystemErrorsToProps = state => {\n\n    return {forgotPassword : state.authentication};\n}\nexport default connect(mapSystemErrorsToProps , {forgotPasswordAction})(formWrapped);\n\n","\nexport const  validatePasswordForgotForm = (formValues) => {\n    const errors = {};\n    const ALLOWED_CHARACTERS = /^[a-zA-Z0-9- ,_]*$/;\n\n\n    if(!formValues.username){\n        errors.username = 'Please Enter User ID';\n    }\n\n    if(formValues.username){\n        const username =  formValues.username;\n        if(username.length < 3) {\n            errors.username = 'User ID must be greater than 3 Charaters';\n        }\n\n        if(username.length > 45) {\n            errors.username = 'User ID must be less then 45 Characters';\n        }\n\n        if(!ALLOWED_CHARACTERS.test(username)){\n            errors.username = 'User ID contains invalid Characters. Please review your entry';\n        }\n    }\n\n\n    return errors;\n};","import React from 'react';\nimport {Field, Form, Formik} from \"formik\";\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\n\nimport {loginAction} from \"../actions\";\nimport {renderPasswordField, renderTextFieldEdit} from \"../../util/WtFields\";\nimport {loginValidations} from \"./LoginValidations\";\nimport {displaySystemMessage} from \"../common/MessageObject\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport logo from \"../../images/logo_noBG.png\"\n\n\n\n\nclass Logout extends React.Component{\n\n    state = {loading : false};\n\n\n    componentDidMount() {\n        sessionStorage.removeItem(\"authUser\");\n        sessionStorage.removeItem(\"subscription\");\n        sessionStorage.removeItem(\"modules\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(prevState.loading){\n            this.setState({loading: false});\n        }\n    }\n\n\n    submitForm = formValues => {\n        this.setState({loading:true});\n        formValues.grant_type = 'password';\n\n        this.props.loginAction(formValues);\n\n    }\n\n\n    useStyles = makeStyles((theme) => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        green: {\n            color: '#fff',\n            backgroundColor: '#008080',\n        },\n    }));\n\n\n    buildLoginForm = () => {\n\n        if(!this.state.loading) {\n            return (\n\n                <Formik\n                    initialValues={\n                        {\n                            username: \"\",\n                            password: \"\",\n                        }\n                    }\n                    validationSchema={loginValidations}\n                    enableReinitialize={true}\n                    onSubmit={values => {\n                        this.submitForm(values);\n                    }}>\n\n                    {({errors, handleChange, touched}) => (\n                        <Form id=\"apc_login\" noValidate autoComplete=\"off\" style={{padding: '25px'}}>\n\n                            <br/><br/>\n\n                            <Field name=\"username\" component={renderTextFieldEdit} label=\"Username *\" id=\"username\"\n                                   type=\"text\"/>\n                            <br/><br/>\n                            <Field name=\"password\" component={renderPasswordField} label=\"Password *\" id=\"password\"\n                                   type=\"password\"/>\n\n                            <br/> <br/>\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>Sign in</Button>\n\n                        </Form>\n                    )}\n                </Formik>\n            )\n        }else{\n            return(\n                <div>\n                    <br/><br/><br/><br/><br/>\n                    <CircularProgress size={80} />\n                    <div>...Processing your request</div>\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <AppBar position=\"static\">\n                    <Toolbar>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={3} md={3}>\n                                <div>\n                                    <img width={30} height={30} src={logo} alt=\"Worktrim Logo\" />\n                                    <span style={{fontSize:'24px', fontWeight : 'bold'}}>Worktrim</span>\n                                </div>\n                            </Grid>\n\n                        </Grid>\n\n                    </Toolbar>\n                </AppBar>\n\n                <Container  maxWidth=\"xl\" className =\"app-body-content\">\n                    {displaySystemMessage(this.props.authentication)}\n                    <Container component=\"main\" maxWidth=\"sm\">\n                        <Paper elevation={4}>\n                            <div style={{marginLeft:'45%'}}>\n                                <Avatar style={{backgroundColor :'orange'}}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\" style={{marginLeft:'-5%'}}>\n                                    Sign in\n                                </Typography>\n                            </div>\n\n                            {this.buildLoginForm()}\n\n                            <br />\n                        </Paper>\n                    </Container>\n                </Container>\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nconst  mapStateToProps = state => {\n    return state;\n\n}\nexport default connect(mapStateToProps , {loginAction})(Logout);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport {Link} from \"react-router-dom\";\n\n\nimport {getPermissions, getSubscription, getUserProfile} from \"../helpers/UserInfo\";\nimport {permissionConstants} from \"../helpers/PermissionConstants\";\n\n\nconst SettingsDropDown = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n\n\n\n    const renderHealthcareLinks = () => {\n        const permissions = getPermissions();\n        const sub = getSubscription();\n\n        //TODO: CHECK FOR HEALTHCARE PERMISSION (&& sub.timeclock === true)\n\n        if(permissions.indexOf(permissionConstants.permissions.HEALTH_PERMISSION) >= 0 ){\n            return (\n                <React.Fragment>\n                    <Link to=\"/healthcare-settings\" style={{textDecoration:'none', color:'#008080'}}><MenuItem onClick={handleClose}>Healthcare Settings</MenuItem></Link>\n                </React.Fragment>\n            )\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    const renderSettingsLink = () => {\n        const role = getUserProfile();\n        if(role === permissionConstants.role.ADMIN_ROLE){\n            return (\n                <React.Fragment>\n                    {renderHealthcareLinks()}\n                </React.Fragment>\n            )\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n            <Button\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n            >\n                <span style={{color:'#ffffff', fontSize:'15px', fontWeight:'bold', marginLeft:'18px', textTransform:'none'}}>Settings</span><ArrowDropDownIcon style={{ color: '#ffffff'}} />\n            </Button>\n            <Popper style={{position:'relative', zIndex:'1000'}} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                    {renderSettingsLink()}\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n}\n\n\nexport default SettingsDropDown;\n","import React from 'react';\nimport { AppBar, Divider, IconButton, makeStyles, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nimport { permissionConstants } from '../helpers/PermissionConstants';\nimport SettingsDropDown from './SettingsDropDown';\nimport { getSubscription } from '../helpers/UserInfo';\nimport logo from '../../images/logo_noBG.png';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  }\n}));\n\nexport default function TopBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const returnLink = (linkItem, mbile) => {\n    const role = props.role;\n    const permissions = props.permissions;\n    const cls = mbile ? 'mobile-top-nav-links' : 'top-nav-menu-items';\n    const sub = getSubscription();\n\n    if (role === permissionConstants.role.ADMIN_ROLE) {\n      //TODO: Check if they have subscription for this module. (sub.healthcarePlan === true)\n      if (permissions.indexOf(permissionConstants.permissions.HEALTH_PERMISSION) >= 0) {\n        if (mbile) {\n          return (\n            <MenuItem>\n              <Link to=\"/healthcare\" className={cls}>\n                Healthcare\n              </Link>\n            </MenuItem>\n          );\n        } else {\n          return (\n            <Link to=\"/healthcare\" className={cls}>\n              Healthcare\n            </Link>\n          );\n        }\n      }\n    }\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/my-profile\" className=\"mobile-top-nav-links\">\n          {' '}\n          My Profile\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/give-feedback\" className=\"mobile-top-nav-links\">\n          {' '}\n          Give Feedback\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/logout\" className=\"mobile-top-nav-links\">\n          {' '}\n          Logout\n        </Link>\n      </MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Divider />\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/my-profile\" className=\"mobile-top-nav-links\">\n          {' '}\n          My Profile\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/give-feedback\" className=\"mobile-top-nav-links\">\n          {' '}\n          Give Feedback\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/logout\" className=\"mobile-top-nav-links\">\n          {' '}\n          Logout\n        </Link>\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderSettings = () => {\n    const permissions = props.permissions;\n    const sub = getSubscription();\n    if (\n      (permissions.indexOf(permissionConstants.permissions.TIMECLOCKMANAGER_PERMISSION) >= 0 &&\n        sub.timeclock === true) ||\n      (permissions.indexOf(permissionConstants.permissions.SCHEDULER_PERMISSION) >= 0 && sub.scheduler === true) ||\n      (permissions.indexOf(permissionConstants.permissions.HEALTH_PERMISSION) >= 0 && sub.healthcarePlan === true)\n    ) {\n      return <SettingsDropDown />;\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n            <img width={30} height={30} src={logo} alt=\"worktrim Logo\" /> Worktrim\n          </IconButton>\n\n          <div className={classes.sectionDesktop}>\n            <div className={classes.search}>{returnLink('health', false)}</div>\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {renderSettings()}\n\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, CardActionArea, CardActions, CardContent, Container, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport Topbar from '../components/top-navigation/Topbar';\nimport { getPermissions, getUserProfile } from '../components/helpers/UserInfo';\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    // let sub = getSubscription();\n    // let permissions = getPermissions();\n    // console.log('subscrition is --> ', sub, 'Permission is --->', permissions);\n  }\n\n  render() {\n    // let permissions = getPermissions();\n    return (\n      <React.Fragment>\n        <Topbar permissions={getPermissions()} role={getUserProfile()} />\n        <Container maxWidth=\"xl\" className=\"app-body-content\">\n          <Container component=\"main\" maxWidth=\"lg\">\n            <h1>Welcome to Worktrim Dashboard</h1>\n\n            <Card>\n              <CardActionArea>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Home healthcare\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Home health provides easy and seamless way to manage your clients as well as your emaployees ...all\n                    in one spot\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Link to=\"/healthcare\">\n                  <Button size=\"small\" color=\"primary\">\n                    Learn More\n                  </Button>\n                </Link>\n                <Link to=\"/healthcare\">\n                  <Button size=\"small\" color=\"primary\">\n                    Go To Home Healthcare\n                  </Button>\n                </Link>\n              </CardActions>\n            </Card>\n          </Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\nexport default connect(mapStateToProps, {})(Dashboard);\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport { permissionConstants } from '../helpers/PermissionConstants';\nimport { getPermissions } from '../helpers/UserInfo';\n\nclass BreadCrumb extends React.Component {\n  renderParentCrumb = () => {\n    if (this.props.activeParentLink != null) {\n      return (\n        <Link to={this.props.activeParentLink} style={{ textDecoration: 'none', color: 'grey' }}>\n          {this.props.activeParentLabel}\n        </Link>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderChildCrumb = () => {\n    if (this.props.activeChildLink) {\n      return (\n        <Link to={this.props.activeChildLink} aria-current=\"page\" style={{ textDecoration: 'none', color: 'grey' }}>\n          {this.props.activeChildLabel}\n        </Link>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderSchedulesButtons = () => {\n    const permissions = getPermissions();\n    if (permissions.indexOf(permissionConstants.permissions.SCHEDULER_PERMISSION) >= 0) {\n      let approvalsURL = 'select-department_-omp-timeclock-approvals';\n      return (\n        <React.Fragment>\n          <Link to={approvalsURL} style={{ textDecoration: 'none' }}>\n            <Button variant=\"outlined\" color=\"default\" style={{ marginRight: '15px' }}>\n              <LibraryAddIcon /> Approvals\n            </Button>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    return (\n      <Paper elevation={4} style={{ width: '100%', minHeight: '50px', borderRadius: 0 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={3} md={3}>\n            <Breadcrumbs aria-label=\"breadcrumb\" style={{ marginTop: '10px', marginLeft: '20px' }}>\n              {this.renderParentCrumb()}\n              {this.renderChildCrumb()}\n            </Breadcrumbs>\n          </Grid>\n          <Grid item xs={9} md={9}>\n            <div style={{ float: 'right', marginTop: '10px' }}></div>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default BreadCrumb;\n","import * as yup from 'yup';\n\nconst ALLOWED_CHARACTERS = /^[a-zA-Z0-9- ,_.]*$/;\nconst EMAIL_CHARACTERS = /^[a-zA-Z0-9- ,_@.]*$/;\n\nexport const userValidation = (formValues) => {\n  const errors = {};\n\n  if (!formValues.firstName) {\n    errors.firstName = 'Please Enter First Name';\n  }\n  if (!formValues.lastName) {\n    errors.lastName = 'Please Enter Last Name';\n  }\n\n  if (!formValues.email) {\n    errors.email = 'Please Enter email address';\n  }\n\n  if (!formValues.dep) {\n    errors.dep = 'Please select a valid department';\n  }\n  if (!formValues.role) {\n    errors.role = 'Please select user role';\n  }\n\n  if (formValues.firstName) {\n    if (formValues.firstName.length < 2) {\n      errors.firstName = 'First name must be more than 2 Characters ';\n    }\n    if (formValues.firstName.length > 30) {\n      errors.firstName = 'First name must be less than 30 Characters ';\n    }\n\n    if (!ALLOWED_CHARACTERS.test(formValues.firstName)) {\n      errors.firstName = 'Username contains invalid Characters';\n    }\n  }\n\n  if (formValues.lastName) {\n    if (formValues.lastName.length < 2) {\n      errors.lastName = 'Last name must be more than 2 Characters ';\n    }\n    if (formValues.lastName.length > 30) {\n      errors.lastName = 'Last name must be less than 30 Characters ';\n    }\n    if (!ALLOWED_CHARACTERS.test(formValues.lastName)) {\n      errors.lastName = 'Last name contains invalid Characters';\n    }\n  }\n\n  if (formValues.otherNames) {\n    if (formValues.otherNames.length < 2) {\n      errors.otherNames = 'Other name must be more than 2 Characters ';\n    }\n    if (formValues.otherNames.length > 45) {\n      errors.lastName = 'Other name must be less than 45 Characters ';\n    }\n    if (!ALLOWED_CHARACTERS.test(formValues.otherNames)) {\n      errors.otherNames = 'Other contains invalid Characters';\n    }\n  }\n\n  if (formValues.email) {\n    if (formValues.email.length < 2) {\n      errors.email = 'email name must be more than 2 Characters ';\n    }\n    if (formValues.email.length > 45) {\n      errors.email = 'email must be less than 45 Characters ';\n    }\n    var re = /^[a-zA-Z0-9- ,_@.]*$/;\n\n    if (!re.test(String(formValues.email).toLowerCase())) {\n      errors.email = 'Please Enter a valid email';\n    }\n  }\n\n  if (formValues.dep) {\n    if (formValues.dep === 0) {\n      errors.dep = 'Please select a valid department';\n    }\n  }\n\n  return errors;\n};\n\nexport const userValidations = () => {\n  let userValidationSchema = {\n    firstName: yup\n      .string()\n      .min(2, 'Must be atleast 2 chratacters')\n      .max(30, 'Cannot be greater than 30 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special characters are not allowed')\n      .required('This field is required.'),\n    lastName: yup\n      .string()\n      .min(2, 'Must be atleast 2 chratacters')\n      .max(30, 'Cannot be greater than 30 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special characters are not allowed')\n      .required('This field is required.'),\n    email: yup\n      .string()\n      .max(45, 'Cannot be greater than 45 characters')\n      .matches(EMAIL_CHARACTERS, 'Special characters are not allowed')\n      .email(),\n\n    otherNames: yup.string().min(2, 'Must be atleast 2 chratacters').max(30, 'Cannot be greater than 30 characters'),\n    dep: yup.number().min(1, 'Please select a valid department'),\n    role: yup.string().required('This field is required').matches(ALLOWED_CHARACTERS, 'Please select Valid option'),\n    HEALTH: yup.string().matches(ALLOWED_CHARACTERS, 'Please select Valid option'),\n    SCHEDULER: yup.string().matches(ALLOWED_CHARACTERS, 'Special characters are not allowed'),\n    NURSINGASSISTANT: yup.string().matches(ALLOWED_CHARACTERS, 'Special characters are not allowed'),\n    REPORT: yup.string().matches(ALLOWED_CHARACTERS, 'Special characters are not allowed'),\n    ACCOUNTMANAGER: yup.string().matches(ALLOWED_CHARACTERS, 'Special characters are not allowed'),\n    TIMECLOCKMANAGER: yup.string().matches(ALLOWED_CHARACTERS, 'Special characters are not allowed'),\n    USERMANAGER: yup.string().matches(ALLOWED_CHARACTERS, 'Special characters are not allowed')\n  };\n\n  return yup.object().shape(userValidationSchema);\n};\n\nexport const advancedActionsValidations = () => {\n  let advancedActionsValidationsSchema = {\n    email: yup\n      .string()\n      .max(45, 'Cannot be greater than 45 characters')\n      .min(5, 'Must be atleast 5 Characters')\n      .matches(EMAIL_CHARACTERS, 'Special characters are not allowed')\n      .email()\n      .required('This field is required.')\n  };\n\n  return yup.object().shape(advancedActionsValidationsSchema);\n};\n\nexport const selfRegistrationValidations = () => {\n  let advancedActionsValidationsSchema = {\n    email: yup\n      .string()\n      .max(45, 'Cannot be greater than 45 characters')\n      .min(5, 'Must be atleast 5 Characters')\n      .matches(EMAIL_CHARACTERS, 'Special characters are not allowed')\n      .email()\n      .required('This field is required.'),\n    username: yup\n      .string()\n      .min(2, 'Must be atleast 2 characters')\n      .max(85, 'Must be less than 85 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special characters are not allowed')\n      .required('This field is required.'),\n    password: yup\n      .string()\n      .min(3, 'should be at least 3 characters')\n      .max(85, 'must be less than 85 charaters')\n      .required('This field is required.'),\n    passwordConfirm: yup.string().test('passwords-match', 'Passwords must match', function (value) {\n      return this.parent.password === value;\n    })\n  };\n\n  return yup.object().shape(advancedActionsValidationsSchema);\n};\n\nexport const editMyProfileValidations = () => {\n  let userValidationSchema = {\n    firstName: yup\n      .string()\n      .min(2, 'Must be atleast 2 chratacters')\n      .max(30, 'Cannot be greater than 30 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special characters are not allowed')\n      .required('This field is required.'),\n    lastName: yup\n      .string()\n      .min(2, 'Must be atleast 2 chratacters')\n      .max(30, 'Cannot be greater than 30 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special characters are not allowed')\n      .required('This field is required.'),\n    email: yup\n      .string()\n      .max(45, 'Cannot be greater than 45 characters')\n      .matches(EMAIL_CHARACTERS, 'Special characters are not allowed')\n      .email(),\n\n    otherNames: yup.string().min(2, 'Must be atleast 2 chratacters').max(30, 'Cannot be greater than 30 characters')\n  };\n\n  return yup.object().shape(userValidationSchema);\n};\n\nexport const changePasswordValidations = () => {\n  let userValidationSchema = {\n    existingPassword: yup\n      .string()\n      .min(3, 'should be at least 3 characters')\n      .max(85, 'must be less than 85 charaters')\n      .required('This field is required.'),\n    password: yup\n      .string()\n      .min(3, 'should be at least 3 characters')\n      .max(85, 'must be less than 85 charaters')\n      .required('This field is required.'),\n    passwordConfirm: yup.string().test('passwords-match', 'Passwords must match', function (value) {\n      return this.parent.password === value;\n    })\n  };\n\n  return yup.object().shape(userValidationSchema);\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { Field, Form, Formik } from 'formik';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Topbar from '../../top-navigation/Topbar';\nimport { getPermissions, getUserProfile } from '../../helpers/UserInfo';\nimport BreadCrumb from '../../top-navigation/BreadCrumb';\nimport SystemMessages from '../SystemMessages';\nimport { loadSingleUserDetails, saveMyProfileActions } from '../../actions/account-actions';\nimport { editMyProfileValidations } from './UserValidation';\nimport { renderTextFieldEdit } from '../../../util/WtFields';\n\nclass MyProfile extends React.Component {\n  componentDidMount() {\n    this.props.loadSingleUserDetails();\n  }\n\n  renderEditForm = () => {\n    let thisUser = this.props.umgr.userInfo;\n\n    if (thisUser !== undefined) {\n      const user = thisUser.user;\n      return (\n        <Formik\n          initialValues={{\n            firstName: user.firstName !== null ? user.firstName : '',\n            lastName: user.lastName !== null ? user.lastName : '',\n            email: user.email !== null ? user.email : '',\n            otherNames: user.otherNames !== null ? user.otherNames : ''\n          }}\n          validationSchema={editMyProfileValidations}\n          enableReinitialize={true}\n          onSubmit={(values) => {\n            this.submitForm(values);\n          }}\n        >\n          {({ errors, handleChange, touched }) => (\n            <Form style={{ padding: '25px' }}>\n              <Field name=\"firstName\" component={renderTextFieldEdit} label=\"First Name *\" id=\"firstName\" type=\"text\" />\n              <Field name=\"lastName\" component={renderTextFieldEdit} label=\"Last Name *\" id=\"lastName\" type=\"text\" />\n              <Field\n                name=\"otherNames\"\n                component={renderTextFieldEdit}\n                label=\"Other Names\"\n                id=\"otherNames\"\n                type=\"text\"\n              />\n              <Field name=\"email\" component={renderTextFieldEdit} label=\"Email\" id=\"email\" type=\"email\" />\n\n              <br />\n              <br />\n\n              <Grid>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      );\n    } else {\n      return <div> ..Loading</div>;\n    }\n  };\n\n  submitForm = (formValues) => {\n    formValues.ssoId = this.props.umgr.userInfo.user.ssoId;\n\n    console.log('form values', formValues);\n    this.props.saveMyProfileActions(formValues);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Topbar permissions={getPermissions()} role={getUserProfile()} />\n        <BreadCrumb\n          activeParentLabel=\"Dashboard\"\n          activeParentLink=\"/dashboard\"\n          activeChildLabel=\"My Profile\"\n          activeChildLink=\"/my-profile\"\n        />\n        <Container maxWidth=\"xl\" className=\"app-body-content\">\n          <SystemMessages />\n          <Container component=\"main\" maxWidth=\"lg\">\n            <Grid container spacing={2}>\n              <Grid item md={4}>\n                <Paper elevation={6} className=\"data-container-paper\">\n                  <div className=\"data-container-paper-inner\">\n                    <h3>Account and Security Information</h3>\n                    <hr />\n                    <Link to=\"/change-password\" style={{ textDecoration: 'none' }}>\n                      <LockOpenIcon />\n                      Change Password\n                    </Link>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item md={8}>\n                <Paper elevation={6} className=\"data-container-paper\">\n                  <div className=\"data-container-paper-inner\">\n                    <h3>\n                      <EditIcon /> My Profile{' '}\n                    </h3>\n                    <hr />\n\n                    {this.renderEditForm()}\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\nexport default connect(mapStateToProps, { loadSingleUserDetails, saveMyProfileActions })(MyProfile);\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { Field, Form, Formik } from 'formik';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Topbar from '../../top-navigation/Topbar';\nimport { getPermissions, getUserProfile } from '../../helpers/UserInfo';\nimport BreadCrumb from '../../top-navigation/BreadCrumb';\nimport { updateMyPasswordActions } from '../../actions/account-actions';\nimport { changePasswordValidations } from './UserValidation';\nimport { renderPasswordField } from '../../../util/WtFields';\nimport { displaySystemMessage } from '../MessageObject';\n\nclass ChangePassword extends React.Component {\n  renderEditForm = () => {\n    return (\n      <Formik\n        initialValues={{\n          existingPassword: '',\n          password: '',\n          passwordConfirm: ''\n        }}\n        validationSchema={changePasswordValidations}\n        enableReinitialize={true}\n        onSubmit={(values) => {\n          this.submitForm(values);\n        }}\n      >\n        {({ errors, handleChange, touched }) => (\n          <Form style={{ padding: '25px' }}>\n            <Field\n              name=\"existingPassword\"\n              component={renderPasswordField}\n              label=\"Existing Password\"\n              id=\"opassword\"\n              type=\"password\"\n            />\n            <Field\n              name=\"password\"\n              component={renderPasswordField}\n              label=\"New Password\"\n              id=\"npassword\"\n              type=\"password\"\n            />\n            <Field\n              name=\"passwordConfirm\"\n              component={renderPasswordField}\n              label=\"New Password Confirmation\"\n              id=\"passwordConfirm\"\n              type=\"password\"\n            />\n            <br />\n            <br />\n\n            <Grid>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    );\n  };\n\n  submitForm = (formValues) => {\n    this.props.updateMyPasswordActions(formValues);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Topbar permissions={getPermissions()} role={getUserProfile()} />\n        <BreadCrumb\n          activeParentLabel=\"Dashboard\"\n          activeParentLink=\"/\"\n          activeChildLabel=\"Update Password\"\n          activeChildLink=\"/my-profile\"\n        />\n        <Container maxWidth=\"xl\" className=\"app-body-content\">\n          {displaySystemMessage(this.props.aDashboard)}\n          <Container component=\"main\" maxWidth=\"lg\">\n            <Grid container spacing={1}>\n              <Paper elevation={6} className=\"data-container-paper\">\n                <div className=\"data-container-paper-inner\">\n                  <h3>\n                    <EditIcon /> Change Password{' '}\n                  </h3>\n                  <hr />\n\n                  {this.renderEditForm()}\n                </div>\n              </Paper>\n            </Grid>\n          </Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\nexport default connect(mapStateToProps, { updateMyPasswordActions })(ChangePassword);\n","import { permissionConstants } from './PermissionConstants';\n\nexport const permittedRoutes = {\n  adminRoutes: [\n    {\n      url: '/admin',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    },\n    {\n      url: '/healthcare',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    },\n    {\n      url: '/healthcare/residents',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    },\n    {\n      url: '/healthcare/groups',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    },\n    {\n      url: '/healthcare/communities',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    },\n    {\n      url: '/healthcare/reports',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    },\n    {\n      url: '/healthcare-settings',\n      permissions: [permissionConstants.role.ADMIN_ROLE]\n    }\n  ],\n  employeeRoutes: [\n    {\n      url: '/employee',\n      permissions: [permissionConstants.role.EMPLOYEE_ROLE]\n    }\n  ],\n  commonRoutes: [\n    {\n      url: '/my-profile',\n      permissions: [permissionConstants.role.ADMIN_ROLE, permissionConstants.role.EMPLOYEE_ROLE]\n    },\n    {\n      url: '/change-password',\n      permissions: [permissionConstants.role.ADMIN_ROLE, permissionConstants.role.EMPLOYEE_ROLE]\n    },\n    {\n      url: '/dashboard',\n      permissions: [permissionConstants.role.ADMIN_ROLE, permissionConstants.role.EMPLOYEE_ROLE]\n    },\n    {\n      url: '/give-feedback',\n      permissions: [permissionConstants.role.ADMIN_ROLE, permissionConstants.role.EMPLOYEE_ROLE]\n    }\n  ]\n};\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {connect} from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Field, Form, Formik} from \"formik\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {renderTextArea, renderTextFieldEdit} from \"../../../util/WtFields\";\nimport Topbar from \"../../top-navigation/Topbar\";\nimport {getPermissions, getUserProfile} from \"../../helpers/UserInfo\";\nimport BreadCrumb from \"../../top-navigation/BreadCrumb\";\nimport {sendFeedback} from \"../../actions/account-actions\";\nimport {displaySystemMessage} from \"../MessageObject\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass GiveFeedback extends React.Component{\n\n    state = {loading: false}\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevState.loading){\n            this.setState({loading:false});\n        }\n    }\n\n    submitFeedbackForm = formValues => {\n        this.setState({loading: true});\n        this.props.sendFeedback(formValues);\n    }\n\n    renderFeedbackForm = () => {\n\n        if(!this.state.loading) {\n            return (\n                <div className=\"data-container-paper-inner\">\n                    <Formik\n                        initialValues={{\n                            messageTitle: '',\n                            messageContent: ''\n\n                        }}\n                        onSubmit={values => {\n                            this.submitFeedbackForm(values);\n                        }}>\n\n\n                        {({errors, handleChange, touched}) => (\n                            <Form id=\"submit-feedback\">\n\n                                <Field name=\"messageTitle\" component={renderTextFieldEdit} label=\"Message Title *\"\n                                       id=\"messageTitle\" type=\"text\"/>\n                                <br/> <br/>\n\n                                <Field name=\"messageContent\" component={renderTextArea} label=\"Message Content *\"\n                                       id=\"messageContent\" type=\"text\"/>\n                                <br/> <br/>\n\n                                <Button variant=\"contained\" type=\"submit\" color=\"primary\">Submit</Button>\n\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            )\n        }else{\n            return (<div style={{marginLeft : '30%'}}><CircularProgress size={70} /></div>);\n        }\n        }\n\n\n\n\n\n\n\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <Topbar permissions = {getPermissions()}  role = {getUserProfile()}/>\n                <BreadCrumb activeParentLabel=\"Dashboard\" activeParentLink=\"/\" activeChildLabel=\"Feed back\" activeChildLink =\"/give-feedback\"/>\n                <Container  maxWidth=\"xl\" className =\"app-body-content\">\n                    {displaySystemMessage(this.props.account.feedback)}\n\n                    <Container component=\"main\" maxWidth=\"lg\">\n\n                        <Grid container spacing={1}>\n                            <Grid item xs>\n                                <Paper elevation={6} className=\"data-container-paper\">\n                                    <div className =\"data-container-paper-inner\">\n                                        <div><h3>Tell us. We are listening!</h3></div>\n                                        {this.renderFeedbackForm()}\n                                    </div>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n\n                    </Container>\n                </Container>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst  mapStateToProps = state => {\n    return state;\n\n}\nexport default connect(mapStateToProps , {sendFeedback})(GiveFeedback);\n\n","import React from 'react';\n\nexport default function HealthcareDashboard() {\n  return <h1>Welcome to Healthcare Dashboard. This is the default landing page for healthcare module</h1>;\n}\n","import React from 'react';\n\nexport default function ResidentHome() {\n  return <h1>Manage Residents</h1>;\n}\n","import axios from 'axios';\nimport { getssoId, getToken } from '../../components/helpers/UserInfo';\n\nconst GROUP_ACTIONS = {\n  LOAD_LIST: 'LOAD_LIST',\n  LOAD_DATA: 'LOAD_DATA',\n  SAVE_DATA: 'SAVE_DATA',\n  DELETE_DATA: 'DELETE_DATA',\n  CLEAR_RESPONSE: 'CLEAR_RESPONSE'\n};\n\nconst initialState = {\n  groupList: [],\n  group: null,\n  response: null,\n  total: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GROUP_ACTIONS.LOAD_LIST:\n      return {\n        ...state,\n        groupList: action.payload,\n        total: action.payload.length\n      };\n    case GROUP_ACTIONS.LOAD_DATA:\n      return {\n        ...state,\n        group: action.payload\n      };\n    case GROUP_ACTIONS.SAVE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case GROUP_ACTIONS.DELETE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case GROUP_ACTIONS.CLEAR_RESPONSE:\n      return {\n        ...state,\n        response: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_HEALTHCARE_URL,\n  transformRequest: [\n    function (data, headers) {\n      const token = getToken();\n      const ssoId = getssoId();\n      headers['Authorization'] = `Bearer ${token}`;\n      headers['uid'] = `${ssoId}`;\n      return JSON.stringify(data);\n    }\n  ],\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const fetchGroupList = () => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/manage-group')\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.LOAD_LIST,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const addGroup = (group) => {\n  return (dispatch) => {\n    const user = JSON.parse(sessionStorage.getItem('user'));\n    group.companyId = user.apcId;\n    axiosInstance\n      .post('/add-group', group)\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const updateGroup = (group) => {\n  return (dispatch) => {\n    axiosInstance\n      .put('/edit-group', group)\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const clearResponse = () => {\n  return (dispatch) => dispatch({ type: GROUP_ACTIONS.CLEAR_RESPONSE });\n};\n\nexport const fetchGroup = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/read-group', { params: { hgid: id } })\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.LOAD_DATA,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteGroup = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .delete('/delete-group', { params: { hgid: id } })\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.DELETE_DATA,\n          payload: response.data\n        });\n        dispatch(fetchGroupList());\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Slide,\n  TextField\n} from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DeleteConfirmation({ name, open, onClose, onApply }) {\n  const [confirmationInput, setConfirmationInput] = useState('');\n  const handleOnClose = () => {\n    setConfirmationInput('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} keepMounted TransitionComponent={Transition}>\n      <DialogTitle>Are you sure?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>To confirm, please type \"{name}\" below:</DialogContentText>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          autoFocus\n          name=\"confirmationInput\"\n          value={confirmationInput}\n          onChange={(event) => setConfirmationInput(event.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleOnClose}>\n          Cancel\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\" onClick={onApply} disabled={confirmationInput !== name}>\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Grid, makeStyles} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Link} from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport {clearResponse, deleteGroup, fetchGroupList} from './GroupReducer';\nimport DeleteConfirmation from '../../components/DeleteConfirmation';\nimport {compose} from \"redux\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\";\nimport Card from \"@material-ui/core/Card\";\nimport clsx from \"clsx\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    marginTopBottom: {\n        margin: theme.spacing(2, 0)\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(1)\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\n\nconst MyMapComponent = compose(withScriptjs, withGoogleMap)((props) => {\n        const classes = useStyles();\n        const handleEventDetails = (event) => {\n            window.location.href = URL;\n        };\n        return (\n            <GoogleMap defaultZoom={8} defaultCenter={props.defaultCenter}>\n                {props.markers.map((marker, index) => (\n                    <Marker key={\"marker-\" + index} onClick={() => props.handleClick(marker)}\n                            position={{lat: marker.lat, lng: marker.lng}}>\n\n                        {props.selectUser === marker &&\n                        <InfoWindow options={{closeBoxURL: ``, enableEventPropagation: true}}>\n                            <Card className={clsx(classes.card)} key={index} onClick={() => handleEventDetails(marker)}>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={marker.imageUrl}\n                                />\n                                <CardContent classes={{\n                                    root: classes.cardContent\n                                }}>\n\n                                    <Typography>\n                                        {marker.groupName}\n                                    </Typography>\n                                    <Typography>\n                                        {marker.groupStreet}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </InfoWindow>\n                        }\n                    </Marker>\n                ))}\n            </GoogleMap>\n\n        )\n    }\n)\n\nexport default function GroupList() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n  const [lat, setLat] = useState(0);\n  const [lng, setLng] = useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectUser, setSelectUser] = useState('')\n  const [showInfoWindow, setShowInfoWindow] = useState(false)\n    const {groupList, response} = useSelector((state) => state.group);\n    const columns = [\n        {\n            name: 'groupName',\n            label: 'Group Name',\n            options: {\n                filter: true,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'groupDescription',\n            label: 'Description',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'groupStreet',\n            label: 'Street Address',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'hgid',\n            label: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                print: false,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080', textAlign: 'center'}}),\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    return (\n                        <Grid container spacing={1} justify=\"center\">\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    startIcon={<EditIcon/>}\n                                    component={Link}\n                                    to={`/healthcare/group/${value}/edit`}\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    startIcon={<DeleteIcon/>}\n                                    onClick={() => handleDeleteGroup(value)}\n                                >\n                                    Delete\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    );\n                }\n            }\n        }\n    ];\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        selectableRows: 'none',\n        print: true,\n        responsive: 'standard',\n        rowsPerPage: 5,\n        rowsPerPageOptions: [5, 10, 20, 50, 100]\n    };\n\n    useEffect(() => dispatch(fetchGroupList()), []);\n\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [message, setMessage] = useState(null);\n    useEffect(() => {\n        if (response != null && response.statusCode === 'OK') {\n            setShowSuccess(true);\n            setMessage(response.message);\n            dispatch(clearResponse());\n            setTimeout(() => setShowSuccess(false), 5000);\n        }\n    }, [response]);\n\n    const [group, setGroup] = useState(null);\n    const handleDeleteGroup = (id) => {\n        setGroup(groupList.find((group) => group.hgid === id));\n        setDialogOpen(true);\n    };\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const handleDialogClose = () => setDialogOpen(false);\n    const handleDialogApply = () => {\n        dispatch(deleteGroup(group.hgid));\n        setDialogOpen(false);\n    };\n\n    const AddGroupButton = () => (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <Button variant=\"outlined\" color=\"primary\" startIcon={<AddIcon/>} component={Link}\n                        to=\"/healthcare/group/add\">\n                    Add Group\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setShowInfoWindow(true)\n    setSelectUser(event)\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n    setSelectUser('')\n  };\n\n  useEffect(() => {\n    const fetchLocation = async () => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          const c = position.coords;\n          const latitude = c.latitude;\n          const longitude = c.longitude;\n          setLat(latitude)\n          setLng(longitude)\n        });\n        return true;\n      }\n    };\n    fetchLocation().then();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n    return (\n        <React.Fragment>\n            <h1>Manage Groups</h1>\n            {showSuccess && (\n                <Alert severity=\"success\" className={classes.marginBottom} onClose={() => setShowSuccess(false)}>\n                    {message}\n                </Alert>\n            )}\n            <AddGroupButton/>\n\n            <MUIDataTable\n                title={'Group List'}\n                data={groupList}\n                columns={columns}\n                options={options}\n                className={classes.marginTopBottom}\n            />\n          <MyMapComponent\n              handleClick={handleClick}\n              selectUser={selectUser}\n              showInfoWindow={showInfoWindow}\n              handleClose={handleClose}\n\n              anchorEl={anchorEl}\n              mapElement={<div style={{height: `100%`}}/>}\n              containerElement={<div style={{height: `80vh`}}/>}\n              loadingElement={<div style={{height: `100%`}}/>}\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBzpWIf2Nci40GTGlTgFQN9w-VJoJoMyF0\"\n              markers={groupList || []}\n              defaultCenter={{\n                lat: lat,\n                lng: lng\n              }}\n          />\n\n\n            {group && (\n                <DeleteConfirmation\n                    name={group.groupName}\n                    open={dialogOpen}\n                    onApply={handleDialogApply}\n                    onClose={handleDialogClose}\n                />\n            )}\n\n            <AddGroupButton/>\n        </React.Fragment>\n    );\n}\n","import axios from 'axios';\nimport { getssoId, getToken } from '../../components/helpers/UserInfo';\n\nconst COMMUNITY_ACTIONS = {\n  LOAD_LIST: 'LOAD_LIST',\n  LOAD_DATA: 'LOAD_DATA',\n  SAVE_DATA: 'SAVE_DATA',\n  DELETE_DATA: 'DELETE_DATA',\n  CLEAR_RESPONSE: 'CLEAR_RESPONSE'\n};\n\nconst initialState = {\n  communityList: [],\n  community: null,\n  response: null,\n  total: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case COMMUNITY_ACTIONS.LOAD_LIST:\n      return {\n        ...state,\n        communityList: action.payload,\n        total: action.payload.length\n      };\n    case COMMUNITY_ACTIONS.LOAD_DATA:\n      return {\n        ...state,\n        community: action.payload\n      };\n    case COMMUNITY_ACTIONS.SAVE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case COMMUNITY_ACTIONS.DELETE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case COMMUNITY_ACTIONS.CLEAR_RESPONSE:\n      return {\n        ...state,\n        response: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_HEALTHCARE_URL,\n  transformRequest: [\n    function (data, headers) {\n      const token = getToken();\n      const ssoId = getssoId();\n      headers['Authorization'] = `Bearer ${token}`;\n      headers['uid'] = `${ssoId}`;\n      return JSON.stringify(data);\n    }\n  ],\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const fetchCommunityList = () => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/manage-community')\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.LOAD_LIST,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const addCommunity = (community) => {\n  return (dispatch) => {\n    const user = JSON.parse(sessionStorage.getItem('user'));\n    community.companyId = user.apcId;\n    axiosInstance\n      .post('/add-community', community)\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const updateCommunity = (community) => {\n  return (dispatch) => {\n    axiosInstance\n      .put('/edit-community', community)\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const clearResponse = () => {\n  return (dispatch) => dispatch({ type: COMMUNITY_ACTIONS.CLEAR_RESPONSE });\n};\n\nexport const fetchCommunity = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/read-community', { params: { cid: id } })\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.LOAD_DATA,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteCommunity = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .delete('/delete-community', { params: { cid: id } })\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.DELETE_DATA,\n          payload: response.data\n        });\n        dispatch(fetchCommunityList());\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, CardContent, Grid, makeStyles, MenuItem } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { Field, Form, Formik } from 'formik';\nimport { renderTextArea, renderTextFieldEdit, renderTextFieldSelect } from '../../util/WtFields';\nimport { addGroup, updateGroup } from './GroupReducer';\nimport { fetchCommunityList } from '../community/CommunityReducer';\n\nconst useStyles = makeStyles((theme) => ({\n  marginBottom: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nexport default function GroupForm({ group }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { response } = useSelector((state) => state.group);\n\n  const { communityList } = useSelector((state) => state.community);\n  useEffect(() => dispatch(fetchCommunityList()), []);\n\n  const initialState = {\n    hgid: null,\n    cid: null,\n    companyId: null,\n    groupName: '',\n    groupCountry: '',\n    groupState: '',\n    groupCity: '',\n    groupStreet: '',\n    groupZipCode: '',\n    groupDescription: '',\n    lat: '',\n    lng: ''\n  };\n  const countryList = require('country-list');\n  const ALLOWED_NAME_CHARACTERS = /^[a-zA-Z0-9 -,.]*$/;\n  const ALLOWED_CHARACTERS = /^[a-zA-Z0-9 -,.'\"]*$/;\n  const schema = yup.object().shape({\n    groupName: yup\n      .string()\n      .required('Group Name is required')\n      .min(2, 'Group Name must be at least 2 characters')\n      .max(40, 'Group Name cannot be greater than 40 characters')\n      .matches(ALLOWED_NAME_CHARACTERS, 'Special Characters are not allowed'),\n    cid: yup.number().required('Please select a community'),\n    groupCountry: yup.string().required('Please select valid country'),\n    groupState: yup\n      .string()\n      .required('State/province/town is required')\n      .min(2, 'State/province/town must be at least 2 characters')\n      .max(40, 'State/province/town cannot be greater than 40 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    groupCity: yup\n      .string()\n      .required('City is required')\n      .min(2, 'City must be at least 2 characters')\n      .max(40, 'City cannot be greater than 40 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    groupStreet: yup\n      .string()\n      .required('Street address is required')\n      .min(2, 'Street address must be at least 2 characters')\n      .max(40, 'Street address cannot be greater than 40 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    groupDescription: yup\n      .string()\n      .required('Description is required')\n      .min(2, 'Description must be at least 2 characters')\n      .max(50, 'Description cannot be greater than 50 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    lat: yup.number().typeError('Latitude must be a number').nullable(),\n    lng: yup.number().typeError('Longitude must be a number').nullable()\n  });\n\n  const submitForm = (data) => {\n    if (data.hgid) {\n      dispatch(updateGroup(data));\n    } else {\n      dispatch(addGroup(data));\n    }\n  };\n\n  const [showError, setShowError] = useState(false);\n  useEffect(() => {\n    if (response != null) {\n      if (response.statusCode === 'OK') {\n        history.push('/healthcare/group');\n      } else {\n        setShowError(true);\n      }\n    }\n  }, [response]);\n\n  return (\n    <React.Fragment>\n      {showError && (\n        <Alert severity=\"error\" className={classes.marginBottom} onClose={() => setShowError(false)}>\n          {response.message}\n        </Alert>\n      )}\n      <Card>\n        <CardContent>\n          <Formik\n            initialValues={group || initialState}\n            validationSchema={schema}\n            enableReinitialize={true}\n            onSubmit={(values) => submitForm(values)}\n          >\n            {() => (\n              <Form>\n                <Grid container spacing={2}>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"groupName\" label=\"Name *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"cid\" label=\"Community *\" component={renderTextFieldSelect}>\n                      {communityList.map((community) => (\n                        <MenuItem key={community.cid} value={community.cid}>\n                          {community.communityName}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"groupCountry\" label=\"Country *\" component={renderTextFieldSelect}>\n                      {countryList.getNames().map((country) => (\n                        <MenuItem key={country} value={country}>\n                          {country}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"groupState\" label=\"State *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"groupCity\" label=\"City *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"groupStreet\" label=\"Street *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"groupZipCode\" label=\"Zip Code\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"lat\" label=\"Latitude\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"lng\" label=\"Longitude\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={12} md={12} xs={12}>\n                    <Field name=\"groupDescription\" label=\"Description *\" component={renderTextArea} />\n                  </Grid>\n                  <Grid item xl={12} md={12} xs={12}>\n                    <Grid container spacing={2} justify=\"center\">\n                      <Grid item>\n                        <Button variant=\"contained\" color=\"default\" component={Link} to={'/healthcare/group'}>\n                          Back\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                          Save Information\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport GroupForm from './GroupForm';\n\nexport default function GroupAdd() {\n  return (\n    <React.Fragment>\n      <h1>Add Group</h1>\n      <GroupForm />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GroupForm from './GroupForm';\nimport { fetchGroup } from './GroupReducer';\n\nexport default function GroupEdit() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { group } = useSelector((state) => state.group);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchGroup(id));\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h1>Edit Group</h1>\n      <GroupForm group={group} />\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Grid, makeStyles} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Link} from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport {clearResponse, deleteCommunity, fetchCommunityList} from './CommunityReducer';\nimport DeleteConfirmation from '../../components/DeleteConfirmation';\nimport {compose} from \"redux\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\"\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    marginTopBottom: {\n        margin: theme.spacing(2, 0)\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(1)\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\n\nconst MyMapComponent = compose(withScriptjs, withGoogleMap)((props) => {\n        const classes = useStyles();\n        const handleEventDetails = (event) => {\n            window.location.href = URL;\n        };\n        return (\n            <GoogleMap defaultZoom={8} defaultCenter={props.defaultCenter}>\n                {props.markers.map((marker, index) => (\n                    <Marker key={\"marker-\" + index} onClick={() => props.handleClick(marker)}\n                            position={{lat: marker.lat, lng: marker.lng}}>\n\n                        {props.selectUser === marker &&\n                        <InfoWindow options={{closeBoxURL: ``, enableEventPropagation: true}}>\n                            <Card className={clsx(classes.card)} key={index} onClick={() => handleEventDetails(marker)}>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={marker.imageUrl}\n                                />\n                                <CardContent classes={{\n                                    root: classes.cardContent\n                                }}>\n\n                                    <Typography>\n                                        {marker.communityName}\n                                    </Typography>\n                                  <Typography>\n                                        {marker.communityAddress}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </InfoWindow>\n                        }\n                    </Marker>\n                ))}\n            </GoogleMap>\n\n        )\n    }\n)\n\nexport default function CommunityList() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [lat, setLat] = useState(0);\n    const [lng, setLng] = useState(0);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectUser, setSelectUser] = useState('')\n    const [showInfoWindow, setShowInfoWindow] = useState(false)\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setShowInfoWindow(true)\n        setSelectUser(event)\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectUser('')\n    };\n\n    const {communityList, response} = useSelector((state) => state.community);\n    const columns = [\n        {\n            name: 'communityName',\n            label: 'Community Name',\n            options: {\n                filter: true,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'communityDescription',\n            label: 'Description',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'communityAddress',\n            label: 'Address',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'cid',\n            label: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                print: false,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080', textAlign: 'center'}}),\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    return (\n                        <Grid container spacing={1} justify=\"center\">\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    startIcon={<EditIcon/>}\n                                    component={Link}\n                                    to={`/healthcare/community/${value}/edit`}\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    startIcon={<DeleteIcon/>}\n                                    onClick={() => handleDeleteCommunity(value)}\n                                >\n                                    Delete\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    );\n                }\n            }\n        }\n    ];\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        selectableRows: 'none',\n        print: true,\n        responsive: 'standard',\n        rowsPerPage: 5,\n        rowsPerPageOptions: [5, 10, 20, 50, 100]\n    };\n\n    useEffect(() => dispatch(fetchCommunityList()), []);\n\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [message, setMessage] = useState(null);\n    useEffect(() => {\n        if (response != null && response.statusCode === 'OK') {\n            setShowSuccess(true);\n            setMessage(response.message);\n            dispatch(clearResponse());\n            setTimeout(() => setShowSuccess(false), 5000);\n        }\n    }, [response]);\n\n    const [community, setCommunity] = useState(null);\n    const handleDeleteCommunity = (id) => {\n        setCommunity(communityList.find((community) => community.cid === id));\n        setDialogOpen(true);\n    };\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const handleDialogClose = () => setDialogOpen(false);\n    const handleDialogApply = () => {\n        dispatch(deleteCommunity(community.cid));\n        setDialogOpen(false);\n    };\n\n\n    useEffect(() => {\n        const fetchLocation = async () => {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    const c = position.coords;\n                    const latitude = c.latitude;\n                    const longitude = c.longitude;\n                    setLat(latitude)\n                    setLng(longitude)\n                });\n                return true;\n            }\n        };\n        fetchLocation().then();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const AddCommunityButton = () => (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    startIcon={<AddIcon/>}\n                    component={Link}\n                    to=\"/healthcare/community/add\"\n                >\n                    Add Community\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <React.Fragment>\n            <h1>Manage Communities</h1>\n            {showSuccess && (\n                <Alert severity=\"success\" className={classes.marginBottom} onClose={() => setShowSuccess(false)}>\n                    {message}\n                </Alert>\n            )}\n            <AddCommunityButton/>\n\n            <MUIDataTable\n                title={'Community List'}\n                data={communityList}\n                columns={columns}\n                options={options}\n                className={classes.marginTopBottom}\n            />\n\n\n            <MyMapComponent\n                handleClick={handleClick}\n                selectUser={selectUser}\n                showInfoWindow={showInfoWindow}\n                handleClose={handleClose}\n\n                anchorEl={anchorEl}\n                mapElement={<div style={{height: `100%`}}/>}\n                containerElement={<div style={{height: `80vh`}}/>}\n                loadingElement={<div style={{height: `100%`}}/>}\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBzpWIf2Nci40GTGlTgFQN9w-VJoJoMyF0\"\n                markers={communityList || []}\n                defaultCenter={{\n                    lat: lat,\n                    lng: lng\n                }}\n            />\n\n\n            {community && (\n                <DeleteConfirmation\n                    name={community.communityName}\n                    open={dialogOpen}\n                    onApply={handleDialogApply}\n                    onClose={handleDialogClose}\n                />\n            )}\n\n            <AddCommunityButton/>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, CardContent, Grid, makeStyles, MenuItem } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { Field, Form, Formik } from 'formik';\nimport { renderTextArea, renderTextFieldEdit, renderTextFieldSelect } from '../../util/WtFields';\nimport { addCommunity, updateCommunity } from './CommunityReducer';\n\nconst useStyles = makeStyles((theme) => ({\n  marginBottom: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nexport default function CommunityForm({ community }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { response } = useSelector((state) => state.community);\n\n  const initialState = {\n    cid: null,\n    companyId: null,\n    communityName: '',\n    communityCountry: '',\n    communityState: '',\n    communityCity: '',\n    communityStreet: '',\n    communityAddress: '',\n    communityZipCode: '',\n    communityDescription: '',\n    lat: '',\n    lng: ''\n  };\n  const countryList = require('country-list');\n  const ALLOWED_NAME_CHARACTERS = /^[a-zA-Z0-9 -,.]*$/;\n  const ALLOWED_CHARACTERS = /^[a-zA-Z0-9 -,.'\"]*$/;\n  const schema = yup.object().shape({\n    communityName: yup\n      .string()\n      .required('Community Name is required')\n      .min(2, 'Community Name must be at least 2 characters')\n      .max(40, 'Community Name cannot be greater than 40 characters')\n      .matches(ALLOWED_NAME_CHARACTERS, 'Special Characters are not allowed'),\n    communityCountry: yup.string().required('Please select valid country'),\n    communityState: yup\n      .string()\n      .required('State/province/town is required')\n      .min(2, 'State/province/town must be at least 2 characters')\n      .max(40, 'State/province/town cannot be greater than 40 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityCity: yup\n      .string()\n      .required('City is required')\n      .min(2, 'City must be at least 2 characters')\n      .max(40, 'City cannot be greater than 40 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityStreet: yup\n      .string()\n      .required('Street address is required')\n      .min(2, 'Street address must be at least 2 characters')\n      .max(40, 'Street address cannot be greater than 40 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityDescription: yup\n      .string()\n      .required('Description is required')\n      .min(2, 'Description must be at least 2 characters')\n      .max(50, 'Description cannot be greater than 50 characters')\n      .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    lat: yup.number().typeError('Latitude must be a number').nullable(),\n    lng: yup.number().typeError('Longitude must be a number').nullable()\n  });\n\n  const submitForm = (data) => {\n    if (data.cid) {\n      dispatch(updateCommunity(data));\n    } else {\n      dispatch(addCommunity(data));\n    }\n  };\n\n  const [showError, setShowError] = useState(false);\n  useEffect(() => {\n    if (response != null) {\n      if (response.statusCode === 'OK') {\n        history.push('/healthcare/community');\n      } else {\n        setShowError(true);\n      }\n    }\n  }, [response]);\n\n  return (\n    <React.Fragment>\n      {showError && (\n        <Alert severity=\"error\" className={classes.marginBottom} onClose={() => setShowError(false)}>\n          {response.message}\n        </Alert>\n      )}\n      <Card>\n        <CardContent>\n          <Formik\n            initialValues={community || initialState}\n            validationSchema={schema}\n            enableReinitialize={true}\n            onSubmit={(values) => submitForm(values)}\n          >\n            {() => (\n              <Form>\n                <Grid container spacing={2}>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"communityName\" label=\"Name *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"communityCountry\" label=\"Country *\" component={renderTextFieldSelect}>\n                      {countryList.getNames().map((country) => (\n                        <MenuItem key={country} value={country}>\n                          {country}\n                        </MenuItem>\n                      ))}\n                    </Field>\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"communityState\" label=\"State *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"communityCity\" label=\"City *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"communityStreet\" label=\"Street *\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"communityZipCode\" label=\"Zip Code\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={12} md={12} xs={12}>\n                    <Field name=\"communityAddress\" label=\"Address\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"lat\" label=\"Latitude\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={6} md={6} xs={12}>\n                    <Field name=\"lng\" label=\"Longitude\" component={renderTextFieldEdit} />\n                  </Grid>\n                  <Grid item xl={12} md={12} xs={12}>\n                    <Field name=\"communityDescription\" label=\"Description *\" component={renderTextArea} />\n                  </Grid>\n                  <Grid item xl={12} md={12} xs={12}>\n                    <Grid container spacing={2} justify=\"center\">\n                      <Grid item>\n                        <Button variant=\"contained\" color=\"default\" component={Link} to={'/healthcare/community'}>\n                          Back\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                          Save Information\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport CommunityForm from './CommunityForm';\n\nexport default function CommunityAdd() {\n  return (\n    <React.Fragment>\n      <h1>Add Community</h1>\n      <CommunityForm />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommunityForm from './CommunityForm';\nimport { fetchCommunity } from './CommunityReducer';\n\nexport default function CommunityEdit() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { community } = useSelector((state) => state.community);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchCommunity(id));\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h1>Edit Community</h1>\n      <CommunityForm community={community} />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function HealthcareReportHome() {\n  return <h1>Reports</h1>;\n}\n","import React from 'react';\nimport { Container, Drawer, List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport { NavLink, Switch } from 'react-router-dom';\n\nimport Topbar from '../components/top-navigation/Topbar';\nimport { getPermissions, getUserProfile } from '../components/helpers/UserInfo';\nimport BreadCrumb from '../components/top-navigation/BreadCrumb';\nimport { PrivateRoute } from '../Routes';\nimport HealthcareDashboard from './dashboard/HealthcareDashboard';\nimport ResidentHome from './resident/ResidentHome';\nimport GroupList from './group/GroupList';\nimport GroupAdd from './group/GroupAdd';\nimport GroupEdit from './group/GroupEdit';\nimport CommunityList from './community/CommunityList';\nimport CommunityAdd from './community/CommunityAdd';\nimport CommunityEdit from './community/CommunityEdit';\nimport HealthcareReportHome from './report/HealthcareReportHome';\n\nexport const drawerWidth = 240;\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '100%'\n  },\n  content: {\n    flexGrow: 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  }\n}));\n\nexport default function HealthcareHome() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Topbar permissions={getPermissions()} role={getUserProfile()} />\n      <BreadCrumb\n        activeParentLabel=\"Dashboard\"\n        activeParentLink=\"/dashboard\"\n        activeChildLabel=\"Healthcare\"\n        activeChildLink=\"/healthcare\"\n      />\n      <div className={classes.root}>\n        <Drawer variant=\"permanent\" className={classes.drawer} classes={{ paper: classes.drawerPaper }}>\n          <div className={classes.drawerContainer}>\n            <List>\n              <ListItem button component={NavLink} to=\"/healthcare/resident\">\n                <ListItemText primary=\"Manage Residents\" />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/group\">\n                <ListItemText primary=\"Manage Groups\" />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/community\">\n                <ListItemText primary=\"Manage Communities\" />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/report\">\n                <ListItemText primary=\"Reports\" />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n\n        <div className={classes.content}>\n          <Container maxWidth=\"xl\" className=\"app-body-content\">\n            <Container component=\"main\" maxWidth=\"lg\">\n              <Switch>\n                <PrivateRoute exact path=\"/healthcare\" component={HealthcareDashboard} />\n                <PrivateRoute path=\"/healthcare/resident\" component={ResidentHome} />\n\n                <PrivateRoute exact path=\"/healthcare/group\" component={GroupList} />\n                <PrivateRoute exact path=\"/healthcare/group/add\" component={GroupAdd} />\n                <PrivateRoute exact path=\"/healthcare/group/:id/edit\" component={GroupEdit} />\n\n                <PrivateRoute exact path=\"/healthcare/community\" component={CommunityList} />\n                <PrivateRoute exact path=\"/healthcare/community/add\" component={CommunityAdd} />\n                <PrivateRoute exact path=\"/healthcare/community/:id/edit\" component={CommunityEdit} />\n\n                <PrivateRoute path=\"/healthcare/report\" component={HealthcareReportHome} />\n              </Switch>\n            </Container>\n          </Container>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport Container from '@material-ui/core/Container';\n\nimport Topbar from '../components/top-navigation/Topbar';\nimport { getPermissions, getSubscription, getUserProfile } from '../components/helpers/UserInfo';\nimport BreadCrumb from '../components/top-navigation/BreadCrumb';\n\nclass HealthcareSettings extends React.Component {\n  componentDidMount() {\n    let sub = getSubscription();\n    let permissions = getPermissions();\n    console.log('subscrition is --> ', sub, 'Permission is --->', permissions);\n  }\n\n  render() {\n    let permissions = getPermissions();\n    return (\n      <React.Fragment>\n        <Topbar permissions={getPermissions()} role={getUserProfile()} />\n        <BreadCrumb\n          activeParentLabel=\"Dashboard\"\n          activeParentLink=\"/dashboard\"\n          activeChildLabel=\"Healthcare Settings\"\n          activeChildLink=\"/healthcare-settings\"\n        />\n        <Container maxWidth=\"xl\" className=\"app-body-content\">\n          <Container component=\"main\" maxWidth=\"lg\">\n            <h1>Any settings specific to the healthcare module</h1>\n          </Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapSystemMessagesToProps = (state) => {\n  return state;\n};\nexport default connect(mapSystemMessagesToProps, {})(HealthcareSettings);\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport history from './history';\n\nimport LoginForm from './components/authentication/LoginForm';\nimport ForgotPassword from './components/common/profile/ForgotPassword';\nimport Logout from './components/authentication/Logout';\nimport Dashboard from './healthcare-module/Dashboard';\nimport MyProfile from './components/common/my-profile/MyProfile';\nimport ChangePassword from './components/common/my-profile/ChangePassword';\nimport { decodePayloadToken, getPermissions, getUserProfile } from './components/helpers/UserInfo';\nimport { permissionConstants } from './components/helpers/PermissionConstants';\nimport { permittedRoutes } from './components/helpers/PermittedRoutes';\nimport GiveFeedback from './components/common/feedback/GiveFeedback';\nimport HealthcareHome from './healthcare-module/HealthcareHome';\nimport HealthcareSettings from './healthcare-module/HealthcareSettings';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst getRolesApplicableToThisRoute = (thisRoute, role, userPermissions) => {\n  let requiredPermissions = [];\n  if (role === permissionConstants.role.ADMIN_ROLE) {\n    for (let key in permittedRoutes.adminRoutes) {\n      if (thisRoute.startsWith(permittedRoutes.adminRoutes[key].url)) {\n        requiredPermissions = permittedRoutes.adminRoutes[key].permissions;\n        break;\n      }\n    }\n\n    let commonRoutes = permittedRoutes.commonRoutes;\n    for (let key3 in commonRoutes) {\n      if (commonRoutes[key3].url.startsWith(thisRoute)) {\n        return true;\n      }\n    }\n  }\n\n  if (role === permissionConstants.role.EMPLOYEE_ROLE) {\n    for (let key2 in permittedRoutes.employeeRoutes) {\n      if (thisRoute.startsWith(permittedRoutes.employeeRoutes[key2].url)) {\n        requiredPermissions = permittedRoutes.employeeRoutes[key2].permissions;\n        break;\n      }\n    }\n\n    let commonRoutes = permittedRoutes.commonRoutes;\n    for (let key4 in commonRoutes) {\n      if (commonRoutes[key4].url.startsWith(thisRoute)) {\n        return true;\n      }\n    }\n  }\n\n  for (let k = 0; k < requiredPermissions.length; k++) {\n    if (userPermissions.indexOf(requiredPermissions[k]) === -1) {\n      return false;\n    }\n  }\n  if (requiredPermissions.length === 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const currentUser = decodePayloadToken();\n\n      if (currentUser === null || currentUser === undefined) {\n        return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\n      }\n\n      let role = getUserProfile();\n      let userPermissions = getPermissions();\n      let permittedForTargetRoute = getRolesApplicableToThisRoute(props.match.path, role, userPermissions);\n\n      if (!permittedForTargetRoute) {\n        if (role === permissionConstants.role.ADMIN_ROLE || permissionConstants.role.EMPLOYEE_ROLE) {\n          return <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />;\n        } else {\n          return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\n        }\n      }\n\n      return <Component {...props} />;\n    }}\n  />\n);\n\nexport default function Routes() {\n  return (\n    <Router history={history}>\n      <CssBaseline />\n      <ScrollToTop />\n      <Switch>\n        <Route exact path=\"/\" component={LoginForm} />\n        <Route exact path=\"/login\" component={LoginForm} />\n        <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\n        <Route exact path=\"/logout\" component={Logout} />\n        <React.Fragment>\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          <PrivateRoute exact path=\"/my-profile\" component={MyProfile} />\n          <PrivateRoute exact path=\"/change-password\" component={ChangePassword} />\n          <PrivateRoute exact path=\"/give-feedback\" component={GiveFeedback} />\n          <PrivateRoute path=\"/healthcare\" component={HealthcareHome} />\n          <PrivateRoute exact path=\"/healthcare-settings\" component={HealthcareSettings} />\n        </React.Fragment>\n      </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport { Grid, Link, Paper } from '@material-ui/core';\n\nexport default function Footer() {\n  return (\n    <Grid\n      item\n      xs={12}\n      style={{\n        width: '100%',\n        minHeight: '100px',\n        position: 'static',\n        transform: 'translateZ(0)',\n        display: 'flex',\n        zIndex: '1101'\n      }}\n    >\n      <Paper\n        elevation={4}\n        style={{\n          width: '100%',\n          minHeight: '100px',\n          position: 'static',\n          transform: 'translateZ(0)',\n          display: 'flex',\n          zIndex: '1102'\n        }}\n      >\n        <Grid container spacing={2} style={{ margin: '0px' }}>\n          <Grid item xs>\n            <div style={{ paddingLeft: '15px' }}>&copy; 2020 Appcentrus</div>\n          </Grid>\n          <Grid item xs>\n            <div style={{ paddingLeft: '50%' }}>\n              <Link href=\"#\">Privacy</Link>\n              <Link href=\"#\" style={{ paddingLeft: '15px' }}>\n                Terms of Use\n              </Link>\n              <Link href=\"#\" style={{ paddingLeft: '15px' }}>\n                Contact\n              </Link>\n              <Link href=\"#\" style={{ paddingLeft: '15px' }}>\n                Help\n              </Link>\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n","import React, { Component } from 'react';\nimport { createMuiTheme, Grid, ThemeProvider } from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.css';\nimport ErrorBoundary from './components/common/ErrorBoundary';\nimport Routes from './Routes';\nimport Footer from './components/Footer';\n\n// const captchaSiteKey = '6LcrYawUAAAAAEyAjgJo7jfrWBqVYKKU2jbUxwo_';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#008080'\n    },\n    secondary: {\n      main: orange[800]\n    },\n\n    error: {\n      main: '#ff0000'\n    },\n    warning: {\n      main: '#ffa500'\n    },\n    info: {\n      main: '#7ccfda'\n    }\n  },\n  typography: {\n    fontFamily: ['\"Lato\"', 'sans-serif'].join(',')\n  }\n});\n\nclass App extends Component {\n  componentDidMount() {\n    // loadReCaptcha(captchaSiteKey);\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ErrorBoundary>\n          <React.Fragment>\n            <Grid container justify=\"center\">\n              <Routes />\n            </Grid>\n          </React.Fragment>\n        </ErrorBoundary>\n        <Footer />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authenticationReducer from './authenticationReducer';\nimport systemMessageReducer from './systemMessageReducer';\nimport adminDashboardReducer from './adminDashboardReducer';\nimport usermanagementReducer from './usermanagementReducer';\nimport accountReducer from './accountReducer';\nimport groupReducer from '../../healthcare-module/group/GroupReducer';\nimport communityReducer from '../../healthcare-module/community/CommunityReducer';\n\nexport default combineReducers({\n  form: formReducer,\n  authentication: authenticationReducer,\n  systemMessage: systemMessageReducer,\n  aDashboard: adminDashboardReducer,\n  umgr: usermanagementReducer,\n  account: accountReducer,\n  group: groupReducer,\n  community: communityReducer\n});\n","import { LOGIN, LOGOUT } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, ...action.payload };\n    case LOGOUT:\n      return { state };\n    default:\n      return state;\n  }\n};\n","import { SYSTEM_MESSAGE } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case SYSTEM_MESSAGE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","import { ADMIN_DASHBOARD } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADMIN_DASHBOARD:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","import { CHANGE_MY_PASSWORD, SAVE_MY_PROFILE } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case CHANGE_MY_PASSWORD:\n      return { ...state, changeMyPassword: action.payload };\n    case SAVE_MY_PROFILE:\n      return { ...state, saveMyProfile: action.payload };\n    default:\n      return state;\n  }\n};\n","import { FETCH_PLAN_INFO, GIVE_FEEDBACK } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_PLAN_INFO:\n      return { ...state, ...action.payload };\n    case GIVE_FEEDBACK:\n      return { ...state, feedback: { ...action.payload } };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducers from './components/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}