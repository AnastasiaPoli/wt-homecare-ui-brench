[{"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/index.js":"1","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/App.js":"2","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/reportWebVitals.js":"3","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/index.js":"4","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/Routes.js":"5","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/ErrorBoundary.js":"6","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/Footer.jsx":"7","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/authenticationReducer.js":"8","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/systemMessageReducer.js":"9","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/adminDashboardReducer.js":"10","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/usermanagementReducer.js":"11","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/accountReducer.js":"12","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/history.js":"13","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/ScrollToTop.js":"14","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/Dashboard.js":"15","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupReducer.js":"16","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityReducer.js":"17","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/authentication/LoginForm.js":"18","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/authentication/Logout.js":"19","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/profile/ForgotPassword.js":"20","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/my-profile/MyProfile.js":"21","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/my-profile/ChangePassword.js":"22","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/PermissionConstants.js":"23","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/UserInfo.js":"24","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/PermittedRoutes.js":"25","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/feedback/GiveFeedback.js":"26","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/HealthcareHome.jsx":"27","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/HealthcareSettings.jsx":"28","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/types.js":"29","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/MessageObject.js":"30","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/account-actions.js":"31","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/top-navigation/BreadCrumb.js":"32","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/top-navigation/Topbar.js":"33","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/util/WtFields.js":"34","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/report/HealthcareReportHome.jsx":"35","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/my-profile/UserValidation.js":"36","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityEdit.jsx":"37","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityList.jsx":"38","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityAdd.jsx":"39","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupEdit.jsx":"40","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupAdd.jsx":"41","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupList.jsx":"42","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentAdd.jsx":"43","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentHome.jsx":"44","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/dashboard/HealthcareDashboard.jsx":"45","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/global-exception-handler.js":"46","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/SystemMessages.js":"47","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/apis/accountauth.js":"48","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/apis/accountnoauth.js":"49","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/top-navigation/SettingsDropDown.js":"50","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/Constants.js":"51","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityForm.jsx":"52","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupForm.jsx":"53","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentTable.jsx":"54","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/Validate.js":"55","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/Validate.js":"56","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/DeleteConfirmation.jsx":"57","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/authentication/LoginValidations.js":"58","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/profile/ForgotPasswordValidation.js":"59","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/index.js":"60","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/apis/accesstoken.js":"61","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentForm.jsx":"62","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/Validate.js":"63","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentReducer.js":"64","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentView.jsx":"65","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentEdit.jsx":"66","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/util/Spinner.js":"67","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/carousel/index.js":"68","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/Functions.js":"69"},{"size":852,"mtime":1613044487000,"results":"70","hashOfConfig":"71"},{"size":1252,"mtime":1613044487000,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":1613044487000,"results":"73","hashOfConfig":"71"},{"size":934,"mtime":1613044487000,"results":"74","hashOfConfig":"71"},{"size":4275,"mtime":1613044487000,"results":"75","hashOfConfig":"71"},{"size":2123,"mtime":1613044487000,"results":"76","hashOfConfig":"71"},{"size":1318,"mtime":1613044487000,"results":"77","hashOfConfig":"71"},{"size":260,"mtime":1613044487000,"results":"78","hashOfConfig":"71"},{"size":229,"mtime":1613044487000,"results":"79","hashOfConfig":"71"},{"size":231,"mtime":1613044487000,"results":"80","hashOfConfig":"71"},{"size":353,"mtime":1613044487000,"results":"81","hashOfConfig":"71"},{"size":330,"mtime":1613044487000,"results":"82","hashOfConfig":"71"},{"size":88,"mtime":1613044487000,"results":"83","hashOfConfig":"71"},{"size":251,"mtime":1613044487000,"results":"84","hashOfConfig":"71"},{"size":2120,"mtime":1613044487000,"results":"85","hashOfConfig":"71"},{"size":3393,"mtime":1613044487000,"results":"86","hashOfConfig":"71"},{"size":3519,"mtime":1613044487000,"results":"87","hashOfConfig":"71"},{"size":4612,"mtime":1613044487000,"results":"88","hashOfConfig":"71"},{"size":5437,"mtime":1613044487000,"results":"89","hashOfConfig":"71"},{"size":6304,"mtime":1613044487000,"results":"90","hashOfConfig":"71"},{"size":4543,"mtime":1613044487000,"results":"91","hashOfConfig":"71"},{"size":3386,"mtime":1613044487000,"results":"92","hashOfConfig":"71"},{"size":539,"mtime":1613044487000,"results":"93","hashOfConfig":"71"},{"size":1909,"mtime":1613044487000,"results":"94","hashOfConfig":"71"},{"size":1525,"mtime":1613044487000,"results":"95","hashOfConfig":"71"},{"size":3845,"mtime":1613044487000,"results":"96","hashOfConfig":"71"},{"size":5513,"mtime":1613044487000,"results":"97","hashOfConfig":"71"},{"size":1354,"mtime":1613044487000,"results":"98","hashOfConfig":"71"},{"size":647,"mtime":1613044487000,"results":"99","hashOfConfig":"71"},{"size":561,"mtime":1613044487000,"results":"100","hashOfConfig":"71"},{"size":3788,"mtime":1613044487000,"results":"101","hashOfConfig":"71"},{"size":2305,"mtime":1613044487000,"results":"102","hashOfConfig":"71"},{"size":6638,"mtime":1613044487000,"results":"103","hashOfConfig":"71"},{"size":8241,"mtime":1613044487000,"results":"104","hashOfConfig":"71"},{"size":106,"mtime":1613044487000,"results":"105","hashOfConfig":"71"},{"size":7176,"mtime":1613044487000,"results":"106","hashOfConfig":"71"},{"size":639,"mtime":1613044487000,"results":"107","hashOfConfig":"71"},{"size":10264,"mtime":1613044487000,"results":"108","hashOfConfig":"71"},{"size":228,"mtime":1613044487000,"results":"109","hashOfConfig":"71"},{"size":591,"mtime":1613044487000,"results":"110","hashOfConfig":"71"},{"size":208,"mtime":1613044487000,"results":"111","hashOfConfig":"71"},{"size":11401,"mtime":1613044487000,"results":"112","hashOfConfig":"71"},{"size":223,"mtime":1613044487000,"results":"113","hashOfConfig":"71"},{"size":4746,"mtime":1613044487000,"results":"114","hashOfConfig":"71"},{"size":185,"mtime":1613044487000,"results":"115","hashOfConfig":"71"},{"size":322,"mtime":1613044487000,"results":"116","hashOfConfig":"71"},{"size":1665,"mtime":1613044487000,"results":"117","hashOfConfig":"71"},{"size":503,"mtime":1613044487000,"results":"118","hashOfConfig":"71"},{"size":112,"mtime":1613044487000,"results":"119","hashOfConfig":"71"},{"size":3878,"mtime":1613044487000,"results":"120","hashOfConfig":"71"},{"size":74,"mtime":1613044487000,"results":"121","hashOfConfig":"71"},{"size":7867,"mtime":1613044487000,"results":"122","hashOfConfig":"71"},{"size":8016,"mtime":1613044487000,"results":"123","hashOfConfig":"71"},{"size":6032,"mtime":1613044487000,"results":"124","hashOfConfig":"71"},{"size":2023,"mtime":1613044487000,"results":"125","hashOfConfig":"71"},{"size":2489,"mtime":1613044487000,"results":"126","hashOfConfig":"71"},{"size":1454,"mtime":1613044487000,"results":"127","hashOfConfig":"71"},{"size":605,"mtime":1613044487000,"results":"128","hashOfConfig":"71"},{"size":723,"mtime":1613044487000,"results":"129","hashOfConfig":"71"},{"size":2955,"mtime":1613044487000,"results":"130","hashOfConfig":"71"},{"size":623,"mtime":1613044487000,"results":"131","hashOfConfig":"71"},{"size":16365,"mtime":1613044487000,"results":"132","hashOfConfig":"71"},{"size":2517,"mtime":1613044487000,"results":"133","hashOfConfig":"71"},{"size":3503,"mtime":1613044487000,"results":"134","hashOfConfig":"71"},{"size":5086,"mtime":1613044487000,"results":"135","hashOfConfig":"71"},{"size":627,"mtime":1613044487000,"results":"136","hashOfConfig":"71"},{"size":871,"mtime":1613044487000,"results":"137","hashOfConfig":"71"},{"size":1585,"mtime":1613044487000,"results":"138","hashOfConfig":"71"},{"size":257,"mtime":1613044487000,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wrl6r",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/index.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/App.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/reportWebVitals.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/index.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/Routes.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/ErrorBoundary.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/Footer.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/authenticationReducer.js",["304"],"import { LOGIN, LOGOUT } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, ...action.payload };\n    case LOGOUT:\n      return { state };\n    default:\n      return state;\n  }\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/systemMessageReducer.js",["305"],"import { SYSTEM_MESSAGE } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case SYSTEM_MESSAGE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/adminDashboardReducer.js",["306"],"import { ADMIN_DASHBOARD } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADMIN_DASHBOARD:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/usermanagementReducer.js",["307"],"import { CHANGE_MY_PASSWORD, SAVE_MY_PROFILE } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case CHANGE_MY_PASSWORD:\n      return { ...state, changeMyPassword: action.payload };\n    case SAVE_MY_PROFILE:\n      return { ...state, saveMyProfile: action.payload };\n    default:\n      return state;\n  }\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/reducers/accountReducer.js",["308"],"import { FETCH_PLAN_INFO, GIVE_FEEDBACK } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_PLAN_INFO:\n      return { ...state, ...action.payload };\n    case GIVE_FEEDBACK:\n      return { ...state, feedback: { ...action.payload } };\n    default:\n      return state;\n  }\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/history.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/ScrollToTop.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/Dashboard.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupReducer.js",["309"],"import axios from 'axios';\nimport { getssoId, getToken } from '../../components/helpers/UserInfo';\n\nconst GROUP_ACTIONS = {\n  LOAD_LIST: 'LOAD_LIST',\n  LOAD_DATA: 'LOAD_DATA',\n  SAVE_DATA: 'SAVE_DATA',\n  DELETE_DATA: 'DELETE_DATA',\n  CLEAR_RESPONSE: 'CLEAR_RESPONSE'\n};\n\nconst initialState = {\n  groupList: [],\n  group: null,\n  response: null,\n  total: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GROUP_ACTIONS.LOAD_LIST:\n      return {\n        ...state,\n        groupList: action.payload,\n        total: action.payload.length\n      };\n    case GROUP_ACTIONS.LOAD_DATA:\n      return {\n        ...state,\n        group: action.payload\n      };\n    case GROUP_ACTIONS.SAVE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case GROUP_ACTIONS.DELETE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case GROUP_ACTIONS.CLEAR_RESPONSE:\n      return {\n        ...state,\n        response: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_HEALTHCARE_URL,\n  transformRequest: [\n    function (data, headers) {\n      const token = getToken();\n      const ssoId = getssoId();\n      headers['Authorization'] = `Bearer ${token}`;\n      headers['uid'] = `${ssoId}`;\n      return JSON.stringify(data);\n    }\n  ],\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const fetchGroupList = () => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/manage-group')\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.LOAD_LIST,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const addGroup = (group) => {\n  return (dispatch) => {\n    const user = JSON.parse(sessionStorage.getItem('user'));\n    group.companyId = user.apcId;\n    axiosInstance\n      .post('/add-group', group)\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const updateGroup = (group) => {\n  return (dispatch) => {\n    axiosInstance\n      .put('/edit-group', group)\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const clearResponse = () => {\n  return (dispatch) => dispatch({ type: GROUP_ACTIONS.CLEAR_RESPONSE });\n};\n\nexport const fetchGroup = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/read-group', { params: { hgid: id } })\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.LOAD_DATA,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteGroup = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .delete('/delete-group', { params: { hgid: id } })\n      .then((response) => {\n        dispatch({\n          type: GROUP_ACTIONS.DELETE_DATA,\n          payload: response.data\n        });\n        dispatch(fetchGroupList());\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityReducer.js",["310"],"import axios from 'axios';\nimport { getssoId, getToken } from '../../components/helpers/UserInfo';\n\nconst COMMUNITY_ACTIONS = {\n  LOAD_LIST: 'LOAD_LIST',\n  LOAD_DATA: 'LOAD_DATA',\n  SAVE_DATA: 'SAVE_DATA',\n  DELETE_DATA: 'DELETE_DATA',\n  CLEAR_RESPONSE: 'CLEAR_RESPONSE'\n};\n\nconst initialState = {\n  communityList: [],\n  community: null,\n  response: null,\n  total: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case COMMUNITY_ACTIONS.LOAD_LIST:\n      return {\n        ...state,\n        communityList: action.payload,\n        total: action.payload.length\n      };\n    case COMMUNITY_ACTIONS.LOAD_DATA:\n      return {\n        ...state,\n        community: action.payload\n      };\n    case COMMUNITY_ACTIONS.SAVE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case COMMUNITY_ACTIONS.DELETE_DATA:\n      return {\n        ...state,\n        response: action.payload\n      };\n    case COMMUNITY_ACTIONS.CLEAR_RESPONSE:\n      return {\n        ...state,\n        response: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_HEALTHCARE_URL,\n  transformRequest: [\n    function (data, headers) {\n      const token = getToken();\n      const ssoId = getssoId();\n      headers['Authorization'] = `Bearer ${token}`;\n      headers['uid'] = `${ssoId}`;\n      return JSON.stringify(data);\n    }\n  ],\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const fetchCommunityList = () => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/manage-community')\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.LOAD_LIST,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const addCommunity = (community) => {\n  return (dispatch) => {\n    const user = JSON.parse(sessionStorage.getItem('user'));\n    community.companyId = user.apcId;\n    axiosInstance\n      .post('/add-community', community)\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const updateCommunity = (community) => {\n  return (dispatch) => {\n    axiosInstance\n      .put('/edit-community', community)\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.SAVE_DATA,\n          payload: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const clearResponse = () => {\n  return (dispatch) => dispatch({ type: COMMUNITY_ACTIONS.CLEAR_RESPONSE });\n};\n\nexport const fetchCommunity = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .get('/read-community', { params: { cid: id } })\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.LOAD_DATA,\n          payload: response.data.object\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteCommunity = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .delete('/delete-community', { params: { cid: id } })\n      .then((response) => {\n        dispatch({\n          type: COMMUNITY_ACTIONS.DELETE_DATA,\n          payload: response.data\n        });\n        dispatch(fetchCommunityList());\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/authentication/LoginForm.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/authentication/Logout.js",["311"],"import React from 'react';\nimport {Field, Form, Formik} from \"formik\";\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\n\nimport {loginAction} from \"../actions\";\nimport {renderPasswordField, renderTextFieldEdit} from \"../../util/WtFields\";\nimport {loginValidations} from \"./LoginValidations\";\nimport {displaySystemMessage} from \"../common/MessageObject\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport logo from \"../../images/logo_noBG.png\"\n\n\n\n\nclass Logout extends React.Component{\n\n    state = {loading : false};\n\n\n    componentDidMount() {\n        sessionStorage.removeItem(\"authUser\");\n        sessionStorage.removeItem(\"subscription\");\n        sessionStorage.removeItem(\"modules\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if(prevState.loading){\n            this.setState({loading: false});\n        }\n    }\n\n\n    submitForm = formValues => {\n        this.setState({loading:true});\n        formValues.grant_type = 'password';\n\n        this.props.loginAction(formValues);\n\n    }\n\n\n    useStyles = makeStyles((theme) => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        green: {\n            color: '#fff',\n            backgroundColor: '#008080',\n        },\n        lockIcon:{\n            display:'flex',\n            justifyContent:'center'\n        }\n    }));\n\n    buildLoginForm = () => {\n\n        if(!this.state.loading) {\n            return (\n\n                <Formik\n                    initialValues={\n                        {\n                            username: \"\",\n                            password: \"\",\n                        }\n                    }\n                    validationSchema={loginValidations}\n                    enableReinitialize={true}\n                    onSubmit={values => {\n                        this.submitForm(values);\n                    }}>\n\n                    {({errors, handleChange, touched}) => (\n                        <Form id=\"apc_login\" noValidate autoComplete=\"off\" style={{padding: '25px'}}>\n\n                            <br/><br/>\n\n                            <Field name=\"username\" component={renderTextFieldEdit} label=\"Username *\" id=\"username\"\n                                   type=\"text\"/>\n                            <br/><br/>\n                            <Field name=\"password\" component={renderPasswordField} label=\"Password *\" id=\"password\"\n                                   type=\"password\"/>\n\n                            <br/> <br/>\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>Sign in</Button>\n\n                        </Form>\n                    )}\n                </Formik>\n            )\n        }else{\n            return(\n                <div>\n                    <br/><br/><br/><br/><br/>\n                    <CircularProgress size={80} />\n                    <div>...Processing your request</div>\n                </div>\n            );\n        }\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position=\"static\">\n                    <Toolbar>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={3} md={3}>\n                                <div>\n                                    <img width={30} height={30} src={logo} alt=\"Worktrim Logo\" />\n                                    <span style={{fontSize:'24px', fontWeight : 'bold'}}>Worktrim</span>\n                                </div>\n                            </Grid>\n\n                        </Grid>\n\n                    </Toolbar>\n                </AppBar>\n\n                <Container  maxWidth=\"xl\" className =\"app-body-content\">\n                    {displaySystemMessage(this.props.authentication)}\n                    <Container component=\"main\" maxWidth=\"sm\">\n                        <Paper elevation={4}>\n                            <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\n                                <Avatar style={{backgroundColor :'orange'}}>\n                                    <LockOutlinedIcon />\n                                </Avatar>\n                                <Typography component=\"h1\" variant=\"h5\" style={{marginLeft:'-5%'}}>\n                                    Sign in abc\n                                </Typography>\n                            </div>\n\n                            {this.buildLoginForm()}\n\n                            <br />\n                        </Paper>\n                    </Container>\n                </Container>\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nconst  mapStateToProps = state => {\n    return state;\n\n}\nexport default connect(mapStateToProps , {loginAction})(Logout);","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/profile/ForgotPassword.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/my-profile/MyProfile.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/my-profile/ChangePassword.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/PermissionConstants.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/UserInfo.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/PermittedRoutes.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/feedback/GiveFeedback.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/HealthcareHome.jsx",["312","313"],"import React from \"react\";\nimport {\n  Container,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { NavLink, Switch } from \"react-router-dom\";\n\nimport Topbar from \"../components/top-navigation/Topbar\";\nimport { getPermissions, getUserProfile } from \"../components/helpers/UserInfo\";\nimport BreadCrumb from \"../components/top-navigation/BreadCrumb\";\nimport { PrivateRoute } from \"../Routes\";\nimport HealthcareDashboard from \"./dashboard/HealthcareDashboard\";\nimport ResidentHome from \"./resident/ResidentHome\";\nimport ResidentAdd from \"./resident/ResidentAdd\";\nimport ResidentEdit from \"./resident/ResidentEdit\";\nimport ResidentView from \"./resident/ResidentView\";\nimport GroupList from \"./group/GroupList\";\nimport GroupAdd from \"./group/GroupAdd\";\nimport GroupEdit from \"./group/GroupEdit\";\nimport CommunityList from \"./community/CommunityList\";\nimport CommunityAdd from \"./community/CommunityAdd\";\nimport CommunityEdit from \"./community/CommunityEdit\";\nimport HealthcareReportHome from \"./report/HealthcareReportHome\";\nimport ReactLogo from \"../images/u47.svg\";\nimport \"../App.css\";\n\nexport const drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  content: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: \"relative\",\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  img: {\n    margin: \"50px\",\n  },\n}));\n\nexport default function HealthcareHome() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Topbar permissions={getPermissions()} role={getUserProfile()} />\n\n      <div className={classes.root}>\n        <Drawer\n          variant=\"permanent\"\n          className={classes.drawer}\n          classes={{ paper: classes.drawerPaper }}\n        >\n          <div className={classes.drawerContainer}>\n            <List>\n              <ListItem>\n                <img\n                  width={100}\n                  height={120}\n                  src={ReactLogo}\n                  className=\"img-adjust-container\"\n                />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/resident\">\n                <ListItemText\n                  className={\"nav-left-menutext-color\"}\n                  primary=\"Manage Residents\"\n                />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/group\">\n                <ListItemText\n                  className={\"nav-left-menutext-color\"}\n                  primary=\"Manage Groups\"\n                />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/community\">\n                <ListItemText\n                  className={\"nav-left-menutext-color\"}\n                  primary=\"Manage Communities\"\n                />\n              </ListItem>\n              <ListItem button component={NavLink} to=\"/healthcare/report\">\n                <ListItemText\n                  className={\"nav-left-menutext-color\"}\n                  primary=\"Reports\"\n                />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n\n        <div className={classes.content}>\n          <Container maxWidth=\"xl\" className=\"app-body-content\">\n            <Container component=\"main\" maxWidth=\"lg\">\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare\"\n                  component={HealthcareDashboard}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/resident\"\n                  component={ResidentHome}\n                />\n                <PrivateRoute\n                  path=\"/healthcare/resident/add\"\n                  component={ResidentAdd}\n                />\n                <PrivateRoute\n                  path=\"/healthcare/resident/:id/edit\"\n                  component={ResidentEdit}\n                />\n                <PrivateRoute\n                  path=\"/healthcare/resident/:id/view\"\n                  component={ResidentView}\n                />\n\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/group\"\n                  component={GroupList}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/group/add\"\n                  component={GroupAdd}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/group/:id/edit\"\n                  component={GroupEdit}\n                />\n\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/community\"\n                  component={CommunityList}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/community/add\"\n                  component={CommunityAdd}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/healthcare/community/:id/edit\"\n                  component={CommunityEdit}\n                />\n\n                <PrivateRoute\n                  path=\"/healthcare/report\"\n                  component={HealthcareReportHome}\n                />\n              </Switch>\n            </Container>\n          </Container>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/HealthcareSettings.jsx",["314"],"import React from 'react';\n\nimport { connect } from 'react-redux';\nimport Container from '@material-ui/core/Container';\n\nimport Topbar from '../components/top-navigation/Topbar';\nimport { getPermissions, getSubscription, getUserProfile } from '../components/helpers/UserInfo';\nimport BreadCrumb from '../components/top-navigation/BreadCrumb';\n\nclass HealthcareSettings extends React.Component {\n  componentDidMount() {\n    let sub = getSubscription();\n    let permissions = getPermissions();\n    console.log('subscrition is --> ', sub, 'Permission is --->', permissions);\n  }\n\n  render() {\n    let permissions = getPermissions();\n    return (\n      <React.Fragment>\n        <Topbar permissions={getPermissions()} role={getUserProfile()} />\n        <BreadCrumb\n          activeParentLabel=\"Dashboard\"\n          activeParentLink=\"/dashboard\"\n          activeChildLabel=\"Healthcare Settings\"\n          activeChildLink=\"/healthcare-settings\"\n        />\n        <Container maxWidth=\"xl\" className=\"app-body-content\">\n          <Container component=\"main\" maxWidth=\"lg\">\n            <h1>Any settings specific to the healthcare module</h1>\n          </Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapSystemMessagesToProps = (state) => {\n  return state;\n};\nexport default connect(mapSystemMessagesToProps, {})(HealthcareSettings);\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/types.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/MessageObject.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/account-actions.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/top-navigation/BreadCrumb.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/top-navigation/Topbar.js",["315"],"import React from 'react';\nimport { AppBar, Divider, IconButton, makeStyles, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nimport { permissionConstants } from '../helpers/PermissionConstants';\nimport SettingsDropDown from './SettingsDropDown';\nimport { getSubscription } from '../helpers/UserInfo';\nimport logo from '../../images/logo_noBG.png';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  }\n}));\n\nexport default function TopBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const returnLink = (linkItem, mbile) => {\n    const role = props.role;\n    const permissions = props.permissions;\n    const cls = mbile ? 'mobile-top-nav-links' : 'top-nav-menu-items';\n    const sub = getSubscription();\n\n    if (role === permissionConstants.role.ADMIN_ROLE) {\n      //TODO: Check if they have subscription for this module. (sub.healthcarePlan === true)\n      if (permissions.indexOf(permissionConstants.permissions.HEALTH_PERMISSION) >= 0) {\n        if (mbile) {\n          return (\n            <MenuItem>\n              <Link to=\"/healthcare\" className={cls}>\n                Healthcare\n              </Link>\n            </MenuItem>\n          );\n        } else {\n          return (\n            <Link to=\"/healthcare\" className={cls}>\n              Healthcare\n            </Link>\n          );\n        }\n      }\n    }\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/my-profile\" className=\"mobile-top-nav-links\">\n          {' '}\n          My Profile\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/give-feedback\" className=\"mobile-top-nav-links\">\n          {' '}\n          Give Feedback\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/logout\" className=\"mobile-top-nav-links\">\n          {' '}\n          Logout\n        </Link>\n      </MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Divider />\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/my-profile\" className=\"mobile-top-nav-links\">\n          {' '}\n          My Profile\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/give-feedback\" className=\"mobile-top-nav-links\">\n          {' '}\n          Give Feedback\n        </Link>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <Link to=\"/logout\" className=\"mobile-top-nav-links\">\n          {' '}\n          Logout\n        </Link>\n      </MenuItem>\n    </Menu>\n  );\n\n  const renderSettings = () => {\n    const permissions = props.permissions;\n    const sub = getSubscription();\n    if (\n      (permissions.indexOf(permissionConstants.permissions.TIMECLOCKMANAGER_PERMISSION) >= 0 &&\n        sub.timeclock === true) ||\n      (permissions.indexOf(permissionConstants.permissions.SCHEDULER_PERMISSION) >= 0 && sub.scheduler === true) ||\n      (permissions.indexOf(permissionConstants.permissions.HEALTH_PERMISSION) >= 0 && sub.healthcarePlan === true)\n    ) {\n      return <SettingsDropDown />;\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n            <img width={30} height={30} src={logo} alt=\"worktrim Logo\" /> Worktrim\n          </IconButton>\n\n          <div className={classes.sectionDesktop}>\n            <div className={classes.search}>{returnLink('health', false)}</div>\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {renderSettings()}\n\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/util/WtFields.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/report/HealthcareReportHome.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/my-profile/UserValidation.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityEdit.jsx",["316"],"import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommunityForm from './CommunityForm';\nimport { fetchCommunity } from './CommunityReducer';\n\nexport default function CommunityEdit() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { community } = useSelector((state) => state.community);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchCommunity(id));\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h1>Edit Community</h1>\n      <CommunityForm community={community} />\n    </React.Fragment>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityList.jsx",["317","318"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Grid, makeStyles} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Link} from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport {clearResponse, deleteCommunity, fetchCommunityList} from './CommunityReducer';\nimport DeleteConfirmation from '../../components/DeleteConfirmation';\nimport {compose} from \"redux\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\"\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\nimport {GOOGLE_MAPS_API_KEY} from \"../../components/helpers/Constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    marginTopBottom: {\n        margin: theme.spacing(2, 0)\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(1)\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2)\n    },\n}));\n\n\nconst MyMapComponent = compose(withScriptjs, withGoogleMap)((props) => {\n        const classes = useStyles();\n        const handleEventDetails = (event) => {\n            window.location.href = URL;\n        };\n        return (\n            <GoogleMap defaultZoom={8} defaultCenter={props.defaultCenter}>\n                {props.markers.map((marker, index) => (\n                    <Marker key={\"marker-\" + index}onClick={() => props.handleClick(marker)}\n                            position={{lat: marker.lat, lng: marker.lng}}>\n\n                        {props.selectUser === marker &&\n                        <InfoWindow options={{closeBoxURL: ``, enableEventPropagation: true}}>\n                            <Card className={clsx(classes.card)} key={index} onClick={() => handleEventDetails(marker)}>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={marker.imageUrl}\n                                />\n                                <CardContent classes={{\n                                    root: classes.cardContent\n                                }}>\n\n                                    <Typography>\n                                        {marker.communityName}\n                                    </Typography>\n                                  <Typography>\n                                        {marker.communityAddress}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </InfoWindow>\n                        }\n                    </Marker>\n                ))}\n            </GoogleMap>\n\n        )\n    }\n)\n\nexport default function CommunityList() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [lat, setLat] = useState(0);\n    const [lng, setLng] = useState(0);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectUser, setSelectUser] = useState('')\n    const [showInfoWindow, setShowInfoWindow] = useState(false)\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setShowInfoWindow(true)\n        setSelectUser(event)\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectUser('')\n    };\n\n    const {communityList, response} = useSelector((state) => state.community);\n    const columns = [\n        {\n            name: 'communityName',\n            label: 'Community Name',\n            options: {\n                filter: true,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'communityDescription',\n            label: 'Description',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'communityAddress',\n            label: 'Address',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'cid',\n            label: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                print: false,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080', textAlign: 'center'}}),\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    return (\n                        <Grid container spacing={1} justify=\"center\">\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    startIcon={<EditIcon/>}\n                                    component={Link}\n                                    to={`/healthcare/community/${value}/edit`}\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    style={{color:\"#ffffff\",backgroundColor:'#D9001B'}}\n                                    size=\"small\"\n                                    startIcon={<DeleteIcon/>}\n                                    onClick={() => handleDeleteCommunity(value)}\n                                >\n                                    Delete\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    );\n                }\n            }\n        }\n    ];\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        selectableRows: 'none',\n        print: true,\n        responsive: 'standard',\n        rowsPerPage: 5,\n        rowsPerPageOptions: [5, 10, 20, 50, 100]\n    };\n\n    useEffect(() => dispatch(fetchCommunityList()), []);\n\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [message, setMessage] = useState(null);\n    useEffect(() => {\n        if (response != null && response.statusCode === 'OK') {\n            setShowSuccess(true);\n            setMessage(response.message);\n            dispatch(clearResponse());\n            setTimeout(() => setShowSuccess(false), 5000);\n        }\n    }, [response]);\n\n    const [community, setCommunity] = useState(null);\n    const handleDeleteCommunity = (id) => {\n        setCommunity(communityList.find((community) => community.cid === id));\n        setDialogOpen(true);\n    };\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const handleDialogClose = () => setDialogOpen(false);\n    const handleDialogApply = () => {\n        dispatch(deleteCommunity(community.cid));\n        setDialogOpen(false);\n    };\n\n\n    useEffect(() => {\n        const fetchLocation = async () => {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    const c = position.coords;\n                    const latitude = c.latitude;\n                    const longitude = c.longitude;\n                    setLat(latitude)\n                    setLng(longitude)\n                });\n                return true;\n            }\n        };\n        fetchLocation().then();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const AddCommunityButton = () => (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    startIcon={<AddIcon/>}\n                    component={Link}\n                    to=\"/healthcare/community/add\"\n                >\n                    Add Community\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <React.Fragment>\n            <h1>Manage Communities</h1>\n            {showSuccess && (\n                <Alert severity=\"success\" className={classes.marginBottom} onClose={() => setShowSuccess(false)}>\n                    {message}\n                </Alert>\n            )}\n\n            <Grid container>\n                <AddCommunityButton/>\n            </Grid>\n\n            <MUIDataTable\n                title={'Community List'}\n                data={communityList}\n                columns={columns}\n                options={options}\n                className={classes.marginTopBottom}\n            />\n\n            <Grid container style={{marginTop: \"10px\", marginBottom: \"20px\"}}>\n                <AddCommunityButton />\n            </Grid>\n\n            <MyMapComponent\n                handleClick={handleClick}\n                selectUser={selectUser}\n                showInfoWindow={showInfoWindow}\n                handleClose={handleClose}\n\n                anchorEl={anchorEl}\n                mapElement={<div style={{height: `100%`}}/>}\n                containerElement={<div style={{height: `80vh`}}/>}\n                loadingElement={<div style={{height: `100%`}}/>}\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`}\n                markers={communityList || []}\n                defaultCenter={{\n                    lat: lat,\n                    lng: lng\n                }}\n            />\n\n\n            {community && (\n                <DeleteConfirmation\n                    name={community.communityName}\n                    open={dialogOpen}\n                    onApply={handleDialogApply}\n                    onClose={handleDialogClose}\n                />\n            )}\n\n        </React.Fragment>\n    );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityAdd.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupEdit.jsx",["319"],"import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GroupForm from './GroupForm';\nimport { fetchGroup } from './GroupReducer';\n\nexport default function GroupEdit() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { group } = useSelector((state) => state.group);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchGroup(id));\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h1>Edit Group</h1>\n      <GroupForm group={group} />\n    </React.Fragment>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupAdd.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupList.jsx",["320","321"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Grid, makeStyles} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Link} from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport {clearResponse, deleteGroup, fetchGroupList} from './GroupReducer';\nimport DeleteConfirmation from '../../components/DeleteConfirmation';\nimport {compose} from \"redux\";\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\";\nimport Card from \"@material-ui/core/Card\";\nimport clsx from \"clsx\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {GOOGLE_MAPS_API_KEY} from \"../../components/helpers/Constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    marginTopBottom: {\n        margin: theme.spacing(2, 0)\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(1)\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\n\nconst MyMapComponent = compose(withScriptjs, withGoogleMap)((props) => {\n        const classes = useStyles();\n        const handleEventDetails = (event) => {\n            window.location.href = URL;\n        };\n        return (\n            <GoogleMap defaultZoom={8} defaultCenter={props.defaultCenter}>\n                {props.markers.map((marker, index) => (\n                    <Marker key={\"marker-\" + index} onClick={() => props.handleClick(marker)}\n                            position={{lat: marker.lat, lng: marker.lng}} >\n\n                        {props.selectUser === marker &&\n                        <InfoWindow options={{closeBoxURL: ``, enableEventPropagation: true}}>\n                            <Card className={clsx(classes.card)} key={index} onClick={() => handleEventDetails(marker)}>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={marker.imageUrl}\n                                />\n                                <CardContent classes={{\n                                    root: classes.cardContent\n                                }}>\n\n                                    <Typography>\n                                        {marker.groupName}\n                                    </Typography>\n                                    <Typography>\n                                        {marker.groupStreet}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </InfoWindow>\n                        }\n                    </Marker>\n                ))}\n            </GoogleMap>\n\n        )\n    }\n)\n\nexport default function GroupList() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n  const [lat, setLat] = useState(0);\n  const [lng, setLng] = useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectUser, setSelectUser] = useState('')\n  const [showInfoWindow, setShowInfoWindow] = useState(false)\n    const {groupList, response} = useSelector((state) => state.group);\n    const columns = [\n        {\n            name: 'groupName',\n            label: 'Group Name',\n            options: {\n                filter: true,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'groupDescription',\n            label: 'Description',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'groupStreet',\n            label: 'Street Address',\n            options: {\n                filter: false,\n                sort: true,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080'}})\n            }\n        },\n        {\n            name: 'hgid',\n            label: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                print: false,\n                setCellHeaderProps: (value) => ({style: {fontWeight: 'bold', color: '#008080', textAlign: 'center'}}),\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    return (\n                        <Grid container spacing={1} justify=\"center\">\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    startIcon={<EditIcon/>}\n                                    component={Link}\n                                    to={`/healthcare/group/${value}/edit`}\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"#ff0000\"\n                                    size=\"small\"\n                                    startIcon={<DeleteIcon/>}\n                                    onClick={() => handleDeleteGroup(value)}\n                                >\n                                    Delete\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    );\n                }\n            }\n        }\n    ];\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        selectableRows: 'none',\n        print: true,\n        responsive: 'standard',\n        rowsPerPage: 5,\n        rowsPerPageOptions: [5, 10, 20, 50, 100]\n    };\n\n    useEffect(() => dispatch(fetchGroupList()), []);\n\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [message, setMessage] = useState(null);\n    useEffect(() => {\n        if (response != null && response.statusCode === 'OK') {\n            setShowSuccess(true);\n            setMessage(response.message);\n            dispatch(clearResponse());\n            setTimeout(() => setShowSuccess(false), 5000);\n        }\n    }, [response]);\n\n    const [group, setGroup] = useState(null);\n    const handleDeleteGroup = (id) => {\n        setGroup(groupList.find((group) => group.hgid === id));\n        setDialogOpen(true);\n    };\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const handleDialogClose = () => setDialogOpen(false);\n    const handleDialogApply = () => {\n        dispatch(deleteGroup(group.hgid));\n        setDialogOpen(false);\n    };  \n\n    const AddGroupButton = () => (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <Button variant=\"outlined\" color=\"secondary\" startIcon={<AddIcon/>} component={Link}\n                        to=\"/healthcare/group/add\" style={{backgroundColor:\"#015478\", color:\"#ffffff\"}}>\n                    Add Group\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n    const AssignResidentGroup = () => (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <Button variant=\"outlined\" color=\"default\" component={Link}\n                        to=\"/healthcare/group/add\" style={{backgroundColor:\"#008080\", color:\"#ffffff\"}}>\n                    Assign Residents to Group\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n    const AssignEmployeesGroup = () => (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <Button variant=\"outlined\" color=\"default\" component={Link}\n                        to=\"/healthcare/group/add\" style={{backgroundColor:\"#02a7f0\", color:\"#ffffff\"}}>\n                    Assign Employees to Groups\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setShowInfoWindow(true)\n    setSelectUser(event)\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n    setSelectUser('')\n  };\n\n  useEffect(() => {\n    const fetchLocation = async () => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          const c = position.coords;\n          const latitude = c.latitude;\n          const longitude = c.longitude;\n          setLat(latitude)\n          setLng(longitude)\n        });\n        return true;\n      }\n    };\n    fetchLocation().then();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n    return (\n        <React.Fragment>\n            <h1>Manage Groups</h1>\n            {showSuccess && (\n                <Alert severity=\"success\" className={classes.marginBottom} onClose={() => setShowSuccess(false)}>\n                    {message}\n                </Alert>\n            )}\n            \n            <Grid container spacing={1} justify=\"center\">\n                <Grid item xl={3} md={3} xs={3}>\n                    <AddGroupButton/>\n                </Grid>\n                <Grid item xl={4} md={4} xs={4}>\n                    <AssignResidentGroup/>\n                </Grid>\n                <Grid item xl={5} md={5} xs={5}>\n                    <AssignEmployeesGroup/>\n                </Grid>\n            </Grid>            \n\n            <MUIDataTable\n                title={'Group List'}\n                data={groupList}\n                columns={columns}\n                options={options}\n                className={classes.marginTopBottom}\n            />\n\n            <Grid container spacing={1} justify=\"center\" style={{marginTop: \"10px\", marginBottom: \"20px\"}}>\n                <Grid item xl={3} md={3} xs={3}>\n                    <AddGroupButton/>\n                </Grid>\n                <Grid item xl={4} md={4} xs={4}>\n                    <AssignResidentGroup/>\n                </Grid>\n                <Grid item xl={5} md={5} xs={5}>\n                    <AssignEmployeesGroup/>\n                </Grid>\n            </Grid>  \n            <MyMapComponent\n              handleClick={handleClick}\n              selectUser={selectUser}\n              showInfoWindow={showInfoWindow}\n              handleClose={handleClose}\n\n              anchorEl={anchorEl}\n              mapElement={<div style={{height: `100%`}}/>}\n              containerElement={<div style={{height: `80vh`}}/>}\n              loadingElement={<div style={{height: `100%`}}/>}\n              googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}`}\n              markers={groupList || []}\n              defaultCenter={{\n                lat: lat,\n                lng: lng\n              }}\n          />\n\n\n            {group && (\n                <DeleteConfirmation\n                    name={group.groupName}\n                    open={dialogOpen}\n                    onApply={handleDialogApply}\n                    onClose={handleDialogClose}\n                />\n            )}            \n\n        </React.Fragment>\n    );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentAdd.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentHome.jsx",["322"],"import { makeStyles, Button, Grid, Collapse } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ResidentTable from \"./ResidentTable\";\nimport Residentform from \"./ResidentForm\";\n\nconst AddResidentButton = () => (\n  <Grid container justify=\"center\">\n    <Grid item>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<AddIcon />}\n        component={Link}\n        to=\"/healthcare/resident/add\"\n        style={{ backgroundColor: \"#015478\", color: \"#ffffff\", margin: '1rem 0' }}\n      >\n        Add resident\n      </Button>\n    </Grid>\n  </Grid>\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      \"&>div\": {\n        width: \"100%\",\n        marginBottom: \".75rem\",\n      },\n    },\n  },\n  input: {\n    maxWidth: 330,\n    width: \"100%\",\n    marginRight: \"1rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n      marginRight: 0,\n      \"&>input\": {\n        maxWidth: 330,\n      },\n    },\n    \"&>input\": {\n      height: 35,\n      width: \"100%\",\n      borderRadius: 0,\n      border: \"1px solid gray\",\n    },\n  },\n  gridContainer: {\n    alignItems: \"center\",\n  },\n  myLabel: {\n    fontSize: 16,\n    marginRight: \"1rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: 0,\n      textAlign: \"start\",\n    },\n  },\n  button: {\n    backgroundColor: \"rgba(0, 191, 191, 1)\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginTop: \".75rem\",\n      maxWidth: 280,\n    },\n  },\n  advance: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: \"2rem\",\n  },\n  advanceDiv: {\n    maxWidth: 550,\n    width: \"100%\",\n    padding: \"1rem 1.5rem\",\n    border: \"1px solid rgba(143, 140, 140, 0.7)\",\n    marginBottom: \"1.5rem\",\n  },\n  advanceDate: {\n    height: 35,\n    maxWidth: 280,\n    width: \"100%\",\n  },\n  mt_5: {\n    marginTop: \"2.5rem\",\n  },\n  mt_3: {\n    marginTop: \"1.5rem\",\n  },\n}));\nfunction ResidentHome() {\n  const classes = useStyles();\n  const [searchBox, setSearchBox] = useState(false);\n  return (\n    <div>\n      <h1>Manage Residents</h1>\n\n      <div className={classes.root}>\n        <div className={classes.myLabel}>Resident ID:</div>\n        <div className={classes.input}>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Search\n          </Button>\n        </div>\n      </div>\n      <div className={classes.advance}>\n        <div className=\"f16\">Advanced Search</div>\n        <button className=\"btn\" onClick={() => setSearchBox(!searchBox)}>\n          <AddCircleIcon />\n        </button>\n      </div>\n      <Collapse in={searchBox} className={classes.advanceDiv}>\n        <Grid container spacing={1} alignItems=\"center\">\n          <Grid item xs={12} sm={4}>\n            <div className=\"f16\">Date of intake</div>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <input\n              type=\"date\"\n              name=\"advanceDate\"\n              className={classes.advanceDate}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          spacing={1}\n          alignItems=\"center\"\n          className={classes.mt_3}\n        >\n          <Grid item xs={12} sm={4}>\n            <div className=\"f16\">Resident's Name</div>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <input\n              type=\"text\"\n              placeholder=\"First Name\"\n              className={classes.advanceDate}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <input\n              type=\"text\"\n              placeholder=\"Last Name\"\n              className={classes.advanceDate}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={8}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={`${classes.button} ${classes.mt_5} w-100`}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </Collapse>\n\n      <div className=\"d-flex justify-content-center\">\n        <AddResidentButton />{\" \"}\n      </div>\n      <ResidentTable />\n      <div className=\"d-flex justify-content-center\">\n        <AddResidentButton />\n      </div>\n    </div>\n  );\n}\n\nexport default ResidentHome;\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/dashboard/HealthcareDashboard.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/global-exception-handler.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/SystemMessages.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/apis/accountauth.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/apis/accountnoauth.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/top-navigation/SettingsDropDown.js",["323"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport {Link} from \"react-router-dom\";\n\n\nimport {getPermissions, getSubscription, getUserProfile} from \"../helpers/UserInfo\";\nimport {permissionConstants} from \"../helpers/PermissionConstants\";\n\n\nconst SettingsDropDown = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n\n\n\n    const renderHealthcareLinks = () => {\n        const permissions = getPermissions();\n        const sub = getSubscription();\n\n        //TODO: CHECK FOR HEALTHCARE PERMISSION (&& sub.timeclock === true)\n\n        if(permissions.indexOf(permissionConstants.permissions.HEALTH_PERMISSION) >= 0 ){\n            return (\n                <React.Fragment>\n                    <Link to=\"/healthcare-settings\" style={{textDecoration:'none', color:'#008080'}}><MenuItem onClick={handleClose}>Healthcare Settings</MenuItem></Link>\n                </React.Fragment>\n            )\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    const renderSettingsLink = () => {\n        const role = getUserProfile();\n        if(role === permissionConstants.role.ADMIN_ROLE){\n            return (\n                <React.Fragment>\n                    {renderHealthcareLinks()}\n                </React.Fragment>\n            )\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n            <Button\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n            >\n                <span style={{color:'#ffffff', fontSize:'15px', fontWeight:'bold', marginLeft:'18px', textTransform:'none'}}>Settings</span><ArrowDropDownIcon style={{ color: '#ffffff'}} />\n            </Button>\n            <Popper style={{position:'relative', zIndex:'1000'}} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                    {renderSettingsLink()}\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n}\n\n\nexport default SettingsDropDown;\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/Constants.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/CommunityForm.jsx",["324","325","326","327","328"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, CardContent, Grid, makeStyles, MenuItem} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Field, Form, Formik} from 'formik';\nimport {renderTextArea, renderTextFieldEdit, renderTextFieldSelect} from '../../util/WtFields';\nimport {addCommunity, updateCommunity} from './CommunityReducer';\nimport {validationSchema} from './Validate';\n// import { values } from 'lodash';\n\nconst useStyles = makeStyles((theme) => ({\n    marginBottom: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nexport default function CommunityForm({community}) {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const {response} = useSelector((state) => state.community);\n    const [btnPressState,setBtnPressState] = useState(false);\n    // const [charLimit, setCharLimit] = useState(2);\n    const [descriptionCharLimit,setdescriptionCharLimit] = useState(50);\n    const [contentValue, setContentValue] = useState('');\n\n    const handleChange  = e => {\n        console.log(e.nativeEvent.data);\n        setContentValue(contentValue => e.nativeEvent.data);\n    };\n\n    const [initialState, setInitialState] = useState({\n        cid: null,\n        companyId: null,\n        communityName: '',\n        communityCountry: '',\n        communityState: '',\n        communityCity: '',\n        communityStreet: '',\n        communityAddress: '',\n        communityZipCode: '',\n        communityDescription: '',\n        lat: '',\n        lng: ''\n    });\n\n\n    const countryList = require('country-list');\n\n    let _countryNames = [];\n    _countryNames.push(\"United States of America\");\n    _countryNames.push(\"Canada\");\n    countryList.getNames().map((country) => {\n        if (country !== \"United States of America\" && country !== \"Canada\") {\n            _countryNames.push(country);\n        }\n        \n        return country;\n    })\n\n    const submitForm = (data) => {\n        if (data.cid) {                   \n            dispatch(updateCommunity(data));\n            setBtnPressState(true) ;\n        } else {\n            dispatch(addCommunity(data));\n            setBtnPressState(true) \n        }\n    };\n\n    const [showError, setShowError] = useState(false);\n    useEffect(() => {\n        if (response != null) {\n            if (response.statusCode === 'OK') {\n                history.push('/healthcare/community');\n            } else {\n                setShowError(true);\n            }\n        }\n      \n    }, [response]);\n\n    return (\n        <React.Fragment>\n            {showError && (\n                <Alert severity=\"error\" className={classes.marginBottom} onClose={() => setShowError(false)}>\n                    {response.message}\n                </Alert>\n            )}\n            {btnPressState && (\n                <Alert severity=\"success\" className={classes.marginBottom} onClose={() => setBtnPressState(false)}>\n                    Data add successfully.\n                </Alert>\n            )}\n            <Card>\n                <CardContent>\n                    <Formik\n                        initialValues={community || initialState}\n                        validationSchema={validationSchema}\n                        enableReinitialize={true}\n                        onSubmit={(values) => submitForm(values)}\n                    >\n                        {() => (\n                            <Form autoComplete=\"off\">\n                                <Grid container spacing={2}>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"communityName\" label=\"Name *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"communityCountry\" label=\"Country *\" component={renderTextFieldSelect}>\n                                            {_countryNames.map((country) => (\n                                                <MenuItem key={country} value={country}>\n                                                    {country}\n                                                </MenuItem>\n                                            ))}\n                                        </Field>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"communityState\" label=\"State *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"communityCity\" label=\"City *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"communityStreet\" label=\"Street *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"communityZipCode\" label=\"Zip Code\"\n                                               component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={12} md={12} xs={12}>\n                                        <Field name=\"communityAddress\" label=\"Address\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    \n                                    <Grid item xl={12} md={12} xs={12}>\n                                        <Field name=\"communityDescription\" label=\"Description *\" inputProps={{ maxLength: 50 }} component={renderTextArea} />\n                                    </Grid>\n                                    <Grid item xl={12} md={12} xs={12}>\n                                        <Grid container spacing={5} justify=\"center\">\n                                            <Grid item xl={10} md={10} xs={10}>\n                                                <Grid container spacing={9} justify=\"center\">\n                                                    <Grid item>\n                                                        <Button variant=\"contained\" color=\"default\" component={Link}\n                                                                to={'/healthcare/community'}>\n                                                            Back\n                                                        </Button>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                                            Save Information\n                                                        </Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item xl={2} md={2} xs={2}>\n                                                    <h2 style={{fontSize:\"10px\"}}>remaining: {`${descriptionCharLimit} `}</h2>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Form>\n                        )}\n                    </Formik>\n                </CardContent>\n            </Card>\n        </React.Fragment>\n    );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/GroupForm.jsx",["329","330","331"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, CardContent, Grid, makeStyles, MenuItem} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Field, Form, Formik} from 'formik';\nimport {renderTextArea, renderTextFieldEdit, renderTextFieldSelect} from '../../util/WtFields';\nimport {addGroup, updateGroup} from './GroupReducer';\nimport {fetchCommunityList} from '../community/CommunityReducer';\nimport {validationSchema} from './Validate'\n\nconst useStyles = makeStyles((theme) => ({\n    marginBottom: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nexport default function GroupForm({group}) {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const {response} = useSelector((state) => state.group);\n\n    const {communityList} = useSelector((state) => state.community);\n    useEffect(() => dispatch(fetchCommunityList()), []);\n\n    const [initialState, setInitialState] = useState({\n        hgid: null,\n        cid: null,\n        companyId: null,\n        groupName: '',\n        groupCountry: '',\n        groupState: '',\n        groupCity: '',\n        groupStreet: '',\n        groupZipCode: '',\n        groupDescription: '',\n        lat: '',\n        lng: ''\n    });\n\n    const [charLimit, setLimitValue] = useState(50);\n    const [contentValue, setContentValue] = useState('');\n\n    const handleChange = event => {\n        setLimitValue(charLimit => (50- event.target.value.length));\n        setContentValue(contentValue => event.target.value);\n    };\n\n    \n    const countryList = require('country-list');\n    let _countryNames = [];\n    _countryNames.push(\"United States of America\");\n    _countryNames.push(\"Canada\");\n    countryList.getNames().map((country) => {\n        if (country !== \"United States of America\" && country !== \"Canada\") {\n            _countryNames.push(country);\n        }\n\n        return country;\n    })\n\n    const submitForm = (data) => {\n        if (data.hgid) {\n            dispatch(updateGroup(data));\n        } else {\n            dispatch(addGroup(data));\n        }\n    };\n\n    const [showError, setShowError] = useState(false);\n    useEffect(() => {\n        if (response != null) {\n            if (response.statusCode === 'OK') {\n                history.push('/healthcare/group');\n            } else {\n                setShowError(true);\n            }\n        }\n    }, [response]);\n\n    return (\n        <React.Fragment>\n            {showError && (\n                <Alert severity=\"error\" className={classes.marginBottom} onClose={() => setShowError(false)}>\n                    {response.message}\n                </Alert>\n            )}\n            <Card>\n                <CardContent>\n                    <Formik\n                        initialValues={group || initialState}\n                        validationSchema={validationSchema}\n                        enableReinitialize={true}\n                        onSubmit={(values) => submitForm(values)}\n                    >\n                        {() => (\n                            <Form>\n                                <Grid container spacing={2}>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"groupName\" label=\"Name *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"cid\" label=\"Community *\" component={renderTextFieldSelect}>\n                                            {communityList.map((community) => (\n                                                <MenuItem key={community.cid} value={community.cid}>\n                                                    {community.communityName}\n                                                </MenuItem>\n                                            ))}\n                                        </Field>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"groupCountry\" label=\"Country *\" component={renderTextFieldSelect}>\n                                        {                                       \n                                            _countryNames.map((country) => (\n                                                <MenuItem key={country} value={country}>\n                                                    {country}\n                                                </MenuItem>\n                                            ))                                           \n                                        }\n                                        </Field>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"groupState\" label=\"State *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"groupCity\" label=\"City *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"groupStreet\" label=\"Street *\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                    <Grid item xl={6} md={6} xs={12}>\n                                        <Field name=\"groupZipCode\" label=\"Zip Code\" component={renderTextFieldEdit}/>\n                                    </Grid>\n                                   \n                                    <Grid item xl={12} md={12} xs={12}>\n                                        <Field name=\"groupDescription\" label=\"Description *\" value = {contentValue} component={renderTextArea} onChange={handleChange} />\n                                    </Grid>\n                                    <Grid item xl={12} md={12} xs={12}>\n                                        <Grid container spacing={5} justify=\"center\">\n                                            <Grid item xl={10} md ={10} xs={10}>\n                                                <Grid container spacing={9} justify=\"center\">\n                                                    <Grid item>\n                                                        <Button variant=\"contained\" color=\"default\" component={Link}\n                                                                to={'/healthcare/group'}>\n                                                            Back\n                                                        </Button>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                                            Save Information\n                                                        </Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item xl={2} md={2} xs={2}>\n                                                <h2 style={{fontSize:\"14px\"}}>Remaining:{charLimit}</h2>\n                                            </Grid>                                           \n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Form>\n                        )}\n                    </Formik>\n                </CardContent>\n            </Card>\n        </React.Fragment>\n    );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentTable.jsx",["332","333","334"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\nimport {\n  clearResponse,\n  deleteResident,\n  fetchResidentList,\n} from \"./ResidentReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MUIDataTable from \"mui-datatables\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport DeleteConfirmation from \"../../components/DeleteConfirmation\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DEFAULT_IMAGE from \"../../images/default_img.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    marginLeft: \"0.5rem\",\n    marginRight: \"0.5rem\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginTop: \".75rem\",\n      maxWidth: 280,\n    },\n  },\n\n  marginBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: \"50%\",\n  },\n}));\n\nfunction ResidentTable() {\n  const dispatch = useDispatch();\n\n  const { residentList, response } = useSelector((state) => state.resident);\n\n  console.log(residentList);\n\n  useEffect(() => dispatch(fetchResidentList()), []);\n\n  const [resident, setResident] = useState(null);\n\n  const handleDeleteGroup = (id) => {\n    console.log(id);\n    setResident(residentList.find((resident) => resident.pain === id));\n    setDialogOpen(true);\n  };\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const handleDialogClose = () => setDialogOpen(false);\n  const handleDialogApply = () => {\n    dispatch(deleteResident(resident.pain));\n    setDialogOpen(false);\n  };\n\n  const rows = [\n    {\n      id: 1,\n      Photo: \"image\",\n      name: \"Johan With\",\n      group: \"Lakeside flats\",\n      Action: \"dekect\",\n    },\n    {\n      id: 2,\n      Photo: \"image\",\n      name: \"Johan With\",\n      group: \"Lakeside flats\",\n    },\n  ];\n  const classes = useStyles();\n\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    if (response != null && response.statusCode === \"OK\") {\n      setShowSuccess(true);\n      setMessage(response.message);\n      dispatch(clearResponse());\n      setTimeout(() => setShowSuccess(false), 5000);\n    }\n  }, [response]);\n\n  const columns = [\n    {\n      name: \"residentPhoto\",\n      label: \"Photo\",\n      options: {\n        filter: false,\n        sort: false,\n        setCellHeaderProps: (value) => ({\n          style: { fontWeight: \"bold\", color: \"#008080\" },\n        }),\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Grid container spacing={1} justify=\"center\">\n              <Grid item>\n                <img\n                  className={classes.img}\n                  src={value || DEFAULT_IMAGE}\n                  alt=\"...\"\n                />\n              </Grid>\n            </Grid>\n          );\n        },\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"Name\",\n      options: {\n        filter: false,\n        sort: true,\n        setCellHeaderProps: (value) => ({\n          style: { fontWeight: \"bold\", color: \"#008080\" },\n        }),\n      },\n    },\n    {\n      name: \"homeAddress\",\n      label: \"Group\",\n      options: {\n        filter: false,\n        sort: true,\n        setCellHeaderProps: (value) => ({\n          style: { fontWeight: \"bold\", color: \"#008080\" },\n        }),\n      },\n    },\n    {\n      name: \"pain\",\n      label: \"Actions\",\n      options: {\n        filter: false,\n        sort: false,\n        print: false,\n        setCellHeaderProps: (value) => ({\n          style: { fontWeight: \"bold\", color: \"#008080\", textAlign: \"center\" },\n        }),\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Grid container spacing={1} justify=\"center\">\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<EditIcon />}\n                  component={Link}\n                  to={`/healthcare/resident/${value}/edit`}\n                >\n                  Edit\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<VisibilityIcon />}\n                  component={Link}\n                  to={`/healthcare/resident/${value}/view`}\n                >\n                  View\n                </Button>\n              </Grid>\n\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  color=\"#ff0000\"\n                  size=\"small\"\n                  startIcon={<DeleteIcon />}\n                  onClick={() => handleDeleteGroup(value)}\n                >\n                  Delete\n                </Button>\n              </Grid>\n            </Grid>\n          );\n        },\n      },\n    },\n  ];\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    selectableRows: \"none\",\n    print: true,\n    responsive: \"standard\",\n    rowsPerPage: 5,\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n  };\n\n  return (\n    <React.Fragment>\n      {showSuccess && (\n        <Alert\n          severity=\"success\"\n          className={classes.marginBottom}\n          onClose={() => setShowSuccess(false)}\n        >\n          {message}\n        </Alert>\n      )}\n\n      <MUIDataTable\n        title={\"Resident List\"}\n        data={residentList}\n        columns={columns}\n        options={options}\n      />\n\n      {resident && (\n        <DeleteConfirmation\n          name={`${resident.firstName} ${resident.lastName}`}\n          open={dialogOpen}\n          onApply={handleDialogApply}\n          onClose={handleDialogClose}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default ResidentTable;\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/group/Validate.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/community/Validate.js",["335","336"],"import * as yup from \"yup\";\n\nconst ALLOWED_NAME_CHARACTERS = /^[a-zA-Z0-9 +-,.]*$/;\nconst ALLOWED_CHARACTERS = /^[a-zA-Z0-9 -,.'\"]*$/;\n\nexport const validationSchema = yup.object().shape({\n    communityName: yup\n        .string()\n        .required('Community name is required')\n        .min(2, 'Community name must be at least 2 characters')\n        .max(40, 'Community name cannot be greater than 40 characters'),\n        // .matches(ALLOWED_NAME_CHARACTERS, 'Special Characters are not allowed'),\n    communityCountry: yup.string().required('Please select valid country'),\n    communityState: yup\n        .string()\n        .required('state/province/town is required')\n        .min(2, 'state/province/town must be at least 2 characters')\n        .max(40, 'state/province/town cannot be greater than 40 characters'),\n        // .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityCity: yup\n        .string()\n        .required('city is required')\n        .min(2, 'city must be at least 2 characters')\n        .max(40, 'city cannot be greater than 40 characters'),\n        // .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityStreet: yup\n        .string()\n        .required('street address is required')\n        .min(2, 'street address must be at least 2 characters')\n        .max(40, 'street address cannot be greater than 40 characters'),\n        // .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityDescription: yup\n        .string()\n        .required('')\n        .min(2, 'description must be at least 2 characters')\n        .max(50, 'description cannot be greater than 50 characters'),\n        // .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityZipCode: yup\n        .string()\n        .required('zip code is required')\n        .min(2, 'zip code must be at least 2 characters')\n        .max(40, 'zip code cannot be greater than 40 characters'),\n        // .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    communityAddress: yup\n        .string()\n        .required('address is required')\n        .min(2, 'address must be at least 2 characters')\n        .max(40, 'address cannot be greater than 40 characters'),\n        // .matches(ALLOWED_CHARACTERS, 'Special Characters are not allowed'),\n    \n    lat: yup.number().typeError('latitude must be a number').nullable(),\n    lng: yup.number().typeError('longitude must be a number').nullable()\n});","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/DeleteConfirmation.jsx",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/authentication/LoginValidations.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/profile/ForgotPasswordValidation.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/actions/index.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/apis/accesstoken.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentForm.jsx",["337","338","339","340","341","342","343","344","345","346"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Field, Form, Formik, FieldArray } from \"formik\";\nimport {\n  renderTextArea,\n  renderTextFieldEdit,\n  renderDatePicker,\n  renderTextFieldSelect,\n} from \"../../util/WtFields\";\nimport {\n  addResident,\n  updateResident,\n} from \"../../healthcare-module/resident/ResidentReducer\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { fetchResidentList } from \"./ResidentReducer\";\nimport { validationSchema } from \"./Validate\";\nimport { _getImageFileToBase64 } from \"./../../components/helpers/Functions\";\nimport DEFAULT_IMAGE from \"../../images/default_img.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  marginBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  flex: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n  },\n  marginTop: {\n    marginTop: \"1rem\",\n  },\n  button_container: {\n    textAlign: \"center\",\n    marginTop: \"1rem\",\n  },\n  button: {\n    backgroundColor: \"#015478\",\n    color: \"#ffffff\",\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  image_container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"1rem\",\n  },\n  image: {\n    width: \"70%\",\n    minWidth: \"165px\",\n    minHeight: \"135px\",\n  },\n  uploadButtom: {\n    width: \"50%\",\n    marginTop: \"1rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  advance: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  file_input: {\n    display: \"none\",\n  },\n  custom_btn: {\n    width: \"118px\",\n    height: \"36px\",\n    borderRadius: \"4px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textTransform: \"uppercase\",\n    color: \"white\",\n    background: \"#015478\",\n    marginTop: \"1rem\",\n  },\n}));\n\nconst groupList = [\n  { id: 1, name: \"group 1\" },\n  { id: 2, name: \"group 2\" },\n  { id: 3, name: \"group 3\" },\n];\nconst maritalStatusList = [\"Y\", \"N\", \"D\"];\nconst genderList = [\"Male\", \"Female\", \"Other\"];\n\nexport default function ResidentForm({ resident }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  console.log(\"resident\", resident);\n\n  const { response } = useSelector((state) => state.resident);\n\n  console.log(resident);\n\n  useEffect(() => dispatch(fetchResidentList()), []);\n\n  const [condition, setCondition] = useState(\"\");\n\n  const [initialState, setInitialState] = useState({\n    pain: null,\n    homeAddress: \"test home address\",\n    firstName: \"\",\n    lastName: \"\",\n    otherNames: \"\",\n    dob: \"15/05/2021\",\n    maritalStatus: \"\",\n    gender: \"\",\n    emergencyContactPhone: \"\",\n    emergencyContactName: \"\",\n    knownHealthIssues: \"\",\n    governmentId: \"\",\n    specialNotes: \"\",\n    residentPhoto: \"\",\n  });\n\n  const submitForm = (data) => {\n    if (data.pain) {\n      // data.dob = data.dob.split(\"-\").reverse().join(\"/\");\n      dispatch(updateResident(data));\n    } else {\n      // data.dob = data.dob.split(\"-\").reverse().join(\"/\");\n      dispatch(addResident(data));\n    }\n  };\n\n  const [showError, setShowError] = useState(false);\n  useEffect(() => {\n    if (response != null) {\n      if (response.statusCode === \"OK\") {\n        history.push(\"/healthcare/resident\");\n      } else {\n        setShowError(true);\n      }\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (resident) {\n      setInitialState((initialState) => ({\n        ...initialState,\n        pain: resident?.pain,\n        // dob: resident?.dob.split(\"/\").reverse().join(\"-\"),\n      }));\n    }\n  }, [resident]);\n\n  return (\n    <React.Fragment>\n      {showError && (\n        <Alert\n          severity=\"error\"\n          className={classes.marginBottom}\n          onClose={() => setShowError(false)}\n        >\n          {response.message}\n        </Alert>\n      )}\n      <Card>\n        <CardContent>\n          <Formik\n            initialValues={resident || initialState}\n            validationSchema={validationSchema}\n            enableReinitialize={true}\n            onSubmit={(values) => submitForm(values)}\n          >\n            {({ handleSubmit, values }) => {\n              return (\n                <Form>\n                  <Grid container>\n                    <Grid item xl={8} md={8} xs={12}>\n                      <Grid item className={classes.flex}>\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"firstName\"\n                            label=\"First Name\"\n                            component={renderTextFieldEdit}\n                          />\n                        </Grid>\n\n                        <Grid\n                          item\n                          className={classes.marginTop}\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"lastName\"\n                            label=\"Last Name\"\n                            component={renderTextFieldEdit}\n                          />\n                        </Grid>\n                      </Grid>\n\n                      <Grid item className={classes.flex}>\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"otherNames\"\n                            label=\"Other Names\"\n                            component={renderTextFieldEdit}\n                          />{\" \"}\n                        </Grid>\n\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"dob\"\n                            label=\"Date Of Birth\"\n                            component={renderDatePicker}\n                            // format=\"dd/mm/yyyy\"\n                            // format=\"DD-MM-YYYY\"\n                          />\n                        </Grid>\n                      </Grid>\n\n                      <Grid item className={classes.flex}>\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"hgid\"\n                            label=\"Group\"\n                            component={renderTextFieldSelect}\n                          >\n                            {groupList.map((group) => (\n                              <MenuItem key={group.id} value={group.id}>\n                                {group.name}\n                              </MenuItem>\n                            ))}\n                          </Field>\n                        </Grid>\n\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"maritalStatus\"\n                            label=\"Marital Status\"\n                            component={renderTextFieldSelect}\n                          >\n                            {maritalStatusList.map((status) => (\n                              <MenuItem key={status} value={status}>\n                                {status === \"Y\"\n                                  ? \"Married\"\n                                  : status === \"D\"\n                                  ? \"Divorced\"\n                                  : \"Single\"}\n                              </MenuItem>\n                            ))}\n                          </Field>\n                        </Grid>\n                      </Grid>\n\n                      <Grid item className={classes.flex}>\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"gender\"\n                            label=\"Gender\"\n                            component={renderTextFieldSelect}\n                          >\n                            {genderList.map((gender) => (\n                              <MenuItem key={gender} value={gender}>\n                                {gender}\n                              </MenuItem>\n                            ))}\n                          </Field>\n                        </Grid>\n\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"emergencyContactPhone\"\n                            label=\"Emergency Contact Phone\"\n                            component={renderTextFieldEdit}\n                          />\n                        </Grid>\n                      </Grid>\n\n                      <Grid item className={classes.flex}>\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"emergencyContactName\"\n                            label=\"Emergency Contact Person\"\n                            component={renderTextFieldEdit}\n                          />\n                        </Grid>\n\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <p>Known Medical Condition</p>\n\n                          <Field\n                            name=\"knownHealthIssues\"\n                            label=\"Medical Condition\"\n                            component={renderTextFieldEdit}\n                          />\n\n                          {/* {!!values?.knownHealthIssues?.length &&\n                            values.knownHealthIssues.map((condition, index) => (\n                              <>\n                                <span>\n                                  {condition}\n                                </span>\n\n                                <span\n                                  onClick={() =>\n                                    setInitialState((initialState) => {\n                                      let newArr =\n                                        initialState.knownHealthIssues;\n                                      newArr.splice(\n                                        index,\n                                        1\n                                      )({\n                                        ...initialState,\n                                        knownHealthIssues: newArr,\n                                      });\n                                    })\n                                  }\n                                >\n                                  <DeleteIcon />\n                                </span>\n                                <br />\n                              </>\n                            ))}\n\n                          <Field\n                            label=\"Medical Condition\"\n                            component={renderTextFieldEdit}\n                            value={condition}\n                            onChange={(e) => setCondition(e.target.value)}\n                          />\n                          <span\n                            onClick={() =>\n                              setInitialState((initialState) => ({\n                                ...initialState,\n                                knownHealthIssues: [\n                                  ...initialState.knownHealthIssues,\n                                  condition,\n                                ],\n                              }))\n                            }\n                          >\n                            <AddCircleIcon />\n                          </span> */}\n                        </Grid>\n                      </Grid>\n\n                      <Grid item className={classes.flex}>\n                        <Grid\n                          className={classes.marginTop}\n                          item\n                          xl={5}\n                          md={5}\n                          xs={12}\n                        >\n                          <Field\n                            name=\"governmentId\"\n                            label=\"Government ID\"\n                            component={renderTextFieldEdit}\n                          />\n                        </Grid>\n                      </Grid>\n\n                      <Grid\n                        container\n                        className={classes.marginTop}\n                        direction=\"column\"\n                      >\n                        <Grid item>\n                          <Field\n                            name=\"specialNotes\"\n                            label=\"Note\"\n                            component={renderTextArea}\n                          />\n                        </Grid>\n\n                        <Grid item className={classes.button_container}>\n                          <Button\n                            className={classes.button}\n                            style={{\n                              backgroundColor: \"#015478\",\n                              color: \"#ffffff\",\n                            }}\n                            onClick={handleSubmit}\n                          >\n                            Save Information\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      className={classes.image_container}\n                      item\n                      xl={4}\n                      md={4}\n                      xs={12}\n                    >\n                      <img\n                        className={classes.image}\n                        src={values.residentPhoto || DEFAULT_IMAGE}\n                        alt=\"...\"\n                      />\n\n                      <label className={classes.custom_btn}>\n                        <input\n                          id=\"file\"\n                          type=\"file\"\n                          className={classes.file_input}\n                          name=\"residentPhoto\"\n                          // onChange={async (e) => {\n                          //   const base64 = await _getImageFileToBase64(\n                          //     e.target.files[0]\n                          //   );\n                          //   setInitialState((initialState) => ({\n                          //     ...initialState,\n                          //     residentPhoto: base64,\n                          //   }));\n                          // }}\n                        />\n                        Upload\n                      </label>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/Validate.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentReducer.js",["347"],"import axios from \"axios\";\nimport { getssoId, getToken } from \"../../components/helpers/UserInfo\";\n\nconst RESIDENT_ACTIONS = {\n  LOAD_LIST: \"LOAD_LIST\",\n  LOAD_DATA: \"LOAD_DATA\",\n  SAVE_DATA: \"SAVE_DATA\",\n  DELETE_DATA: \"DELETE_DATA\",\n  CLEAR_RESPONSE: \"CLEAR_RESPONSE\",\n};\n\nconst initialState = {\n  residentList: [],\n  RESIDENT: null,\n  response: null,\n  total: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case RESIDENT_ACTIONS.LOAD_LIST:\n      return {\n        ...state,\n        residentList: action.payload,\n        total: action.payload.length,\n      };\n    case RESIDENT_ACTIONS.LOAD_DATA:\n      return {\n        ...state,\n        RESIDENT: action.payload,\n      };\n    case RESIDENT_ACTIONS.SAVE_DATA:\n      return {\n        ...state,\n        response: action.payload,\n      };\n    case RESIDENT_ACTIONS.DELETE_DATA:\n      return {\n        ...state,\n        response: action.payload,\n      };\n    case RESIDENT_ACTIONS.CLEAR_RESPONSE:\n      return {\n        ...state,\n        response: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_HEALTHCARE_URL,\n  transformRequest: [\n    function (data, headers) {\n      const token = getToken();\n      const ssoId = getssoId();\n      headers[\"Authorization\"] = `Bearer ${token}`;\n      headers[\"uid\"] = `${ssoId}`;\n      return JSON.stringify(data);\n    },\n  ],\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\nexport const fetchResidentList = () => {\n  return (dispatch) => {\n    axiosInstance\n      .get(\"/manage-resident\")\n      .then((response) => {\n        dispatch({\n          type: RESIDENT_ACTIONS.LOAD_LIST,\n          payload: response.data.object,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const addResident = (resident) => {\n  return (dispatch) => {\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\n    resident.companyId = user.apcId;\n    axiosInstance\n      .post(\"/add-resident\", resident)\n      .then((response) => {\n        dispatch({\n          type: RESIDENT_ACTIONS.SAVE_DATA,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const updateResident = (resident) => {\n  return (dispatch) => {\n    axiosInstance\n      .put(\"/edit-resident\", resident)\n      .then((response) => {\n        dispatch({\n          type: RESIDENT_ACTIONS.SAVE_DATA,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const clearResponse = () => {\n  return (dispatch) => dispatch({ type: RESIDENT_ACTIONS.CLEAR_RESPONSE });\n};\n\nexport const fetchResident = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .get(\"/read-resident\", { params: { pain: id } })\n      .then((response) => {\n        dispatch({\n          type: RESIDENT_ACTIONS.LOAD_DATA,\n          payload: response.data.object,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteResident = (id) => {\n  return (dispatch) => {\n    axiosInstance\n      .delete(\"/delete-resident\", { params: { pain: id } })\n      .then((response) => {\n        dispatch({\n          type: RESIDENT_ACTIONS.DELETE_DATA,\n          payload: response.data,\n        });\n        dispatch(fetchResidentList());\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n};\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentView.jsx",["348","349"],"import React, { useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchResident } from \"./ResidentReducer\";\nimport Spinner from \"../../util/Spinner\";\nimport Carousel from \"../../components/common/carousel\";\n\nimport DEFAULT_IMAGE from \"../../images/default_img.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  marginBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  image_container: {\n    textAlign: \"center\",\n  },\n  image: {\n    width: \"70%\",\n  },\n  // cart_nested_containers :{\n  //   textAlign:'ce'\n  // }\n}));\n\nexport default function ResidentView() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { RESIDENT, LOAD_DATA } = useSelector((state) => state.resident);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchResident(id));\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\"=====================\", RESIDENT);\n  // }, [RESIDENT]);\n\n  if (LOAD_DATA) return <Spinner loading={LOAD_DATA} />;\n\n  return (\n    <React.Fragment>\n      <h1>View Resident</h1>\n      <Card>\n        <CardContent>\n          <Grid spacing={2} container>\n            <Grid item xl={8} md={8} xs={12}>\n              <Grid\n                container\n                className={classes.marginBottom}\n                justify=\"space-between\"\n              >\n                <Typography>\n                  Name: {`${RESIDENT?.firstName} ${RESIDENT?.lastName}`}\n                </Typography>\n                <Typography>Date of Birth: {RESIDENT?.dob}</Typography>\n                <Typography>Gender: {RESIDENT?.gender}</Typography>\n              </Grid>\n\n              <Grid\n                container\n                className={classes.marginBottom}\n                justify=\"space-between\"\n              >\n                <Typography>\n                  Marital Status:{\" \"}\n                  {`${RESIDENT?.firstName} ${RESIDENT?.lastName}`}\n                </Typography>\n                <Typography>Official ID: {\"static\"}</Typography>\n                <Typography>\n                  Date of intake: {RESIDENT?.dateOfIntake}\n                </Typography>\n              </Grid>\n\n              <Grid\n                container\n                className={classes.marginBottom}\n                justify=\"space-between\"\n              >\n                <Typography>Community: {\"static\"}</Typography>\n                <Typography>Group: {\"static\"}</Typography>\n                <Typography>\n                  Medical conditions: {RESIDENT?.knownHealthIssues}\n                </Typography>\n              </Grid>\n\n              <Grid\n                container\n                className={classes.marginBottom}\n                justify=\"space-between\"\n              >\n                <Typography>\n                  Emergency Contact Person: {RESIDENT?.emergencyContactName}\n                </Typography>\n                <Typography>\n                  Emergency Contact Phone: {RESIDENT?.emergencyContactPhone}\n                </Typography>\n              </Grid>\n\n              <Grid container className={classes.marginBottom}>\n                <Typography>Notes: {RESIDENT?.specialNotes}</Typography>\n              </Grid>\n            </Grid>\n\n            <Grid\n              className={classes.image_container}\n              item\n              xl={4}\n              md={4}\n              xs={12}\n            >\n              <img\n                className={classes.image}\n                src={RESIDENT?.residentPhoto || DEFAULT_IMAGE}\n                alt=\"...\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardContent>\n          <Grid spacing={2} container>\n            <Grid justify=\"center\" container>\n              <Typography color=\"primary\" variant=\"h5\" gutterBottom>\n                Medication Chart\n              </Typography>\n\n              {/* <Carousel>\n                <img\n                  className={classes.image}\n                  src={RESIDENT?.residentPhoto || DEFAULT_IMAGE}\n                  alt=\"...\"\n                />\n                <img\n                  className={classes.image}\n                  src={RESIDENT?.residentPhoto || DEFAULT_IMAGE}\n                  alt=\"...\"\n                />\n                <img\n                  className={classes.image}\n                  src={RESIDENT?.residentPhoto || DEFAULT_IMAGE}\n                  alt=\"...\"\n                />\n              </Carousel> */}\n            </Grid>\n\n            <Grid justify=\"center\" container>\n              <Typography color=\"primary\" variant=\"h5\" gutterBottom>\n                Vitals\n              </Typography>\n            </Grid>\n\n            <Grid justify=\"center\" container>\n              <Typography color=\"primary\" variant=\"h5\" gutterBottom>\n                Incidents\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/healthcare-module/resident/ResidentEdit.jsx",["350"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ResidentForm from \"./ResidentForm\";\nimport { fetchResident } from \"./ResidentReducer\";\n\nexport default function ResidentEdit() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const { RESIDENT } = useSelector((state) => state.resident);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchResident(id));\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h1>Edit Resident</h1>\n      <ResidentForm resident={RESIDENT} />\n    </React.Fragment>\n  );\n}\n","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/util/Spinner.js",["351"],"import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\n const Spinner =  (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(props.loading);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n\n    if(props.loading) {\n        return (\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n        )\n    }else{\n        return null;\n    }\n\n}\n\nexport default  Spinner;","/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/common/carousel/index.js",[],"/home/mohammadabrar/Pictures/wt-homecare-ui-brench-main/src/components/helpers/Functions.js",[],{"ruleId":"352","severity":1,"message":"353","line":3,"column":1,"nodeType":"354","endLine":12,"endColumn":3},{"ruleId":"352","severity":1,"message":"353","line":3,"column":1,"nodeType":"354","endLine":10,"endColumn":3},{"ruleId":"352","severity":1,"message":"353","line":3,"column":1,"nodeType":"354","endLine":10,"endColumn":3},{"ruleId":"352","severity":1,"message":"353","line":3,"column":1,"nodeType":"354","endLine":12,"endColumn":3},{"ruleId":"352","severity":1,"message":"353","line":3,"column":1,"nodeType":"354","endLine":12,"endColumn":3},{"ruleId":"352","severity":1,"message":"353","line":19,"column":1,"nodeType":"354","endLine":50,"endColumn":3},{"ruleId":"352","severity":1,"message":"353","line":19,"column":1,"nodeType":"354","endLine":50,"endColumn":3},{"ruleId":"355","severity":1,"message":"356","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":12},{"ruleId":"355","severity":1,"message":"359","line":14,"column":8,"nodeType":"357","messageId":"358","endLine":14,"endColumn":18},{"ruleId":"360","severity":1,"message":"361","line":75,"column":17,"nodeType":"362","endLine":80,"endColumn":19},{"ruleId":"355","severity":1,"message":"363","line":18,"column":9,"nodeType":"357","messageId":"358","endLine":18,"endColumn":20},{"ruleId":"355","severity":1,"message":"364","line":87,"column":11,"nodeType":"357","messageId":"358","endLine":87,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":16,"column":6,"nodeType":"367","endLine":16,"endColumn":8,"suggestions":"368"},{"ruleId":"365","severity":1,"message":"369","line":172,"column":53,"nodeType":"367","endLine":172,"endColumn":55,"suggestions":"370"},{"ruleId":"365","severity":1,"message":"369","line":183,"column":8,"nodeType":"367","endLine":183,"endColumn":18,"suggestions":"371"},{"ruleId":"365","severity":1,"message":"366","line":16,"column":6,"nodeType":"367","endLine":16,"endColumn":8,"suggestions":"372"},{"ruleId":"365","severity":1,"message":"369","line":161,"column":49,"nodeType":"367","endLine":161,"endColumn":51,"suggestions":"373"},{"ruleId":"365","severity":1,"message":"369","line":172,"column":8,"nodeType":"367","endLine":172,"endColumn":18,"suggestions":"374"},{"ruleId":"355","severity":1,"message":"375","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":20},{"ruleId":"355","severity":1,"message":"364","line":56,"column":15,"nodeType":"357","messageId":"358","endLine":56,"endColumn":18},{"ruleId":"355","severity":1,"message":"376","line":25,"column":33,"nodeType":"357","messageId":"358","endLine":25,"endColumn":56},{"ruleId":"355","severity":1,"message":"377","line":26,"column":12,"nodeType":"357","messageId":"358","endLine":26,"endColumn":24},{"ruleId":"355","severity":1,"message":"378","line":28,"column":11,"nodeType":"357","messageId":"358","endLine":28,"endColumn":23},{"ruleId":"355","severity":1,"message":"379","line":33,"column":26,"nodeType":"357","messageId":"358","endLine":33,"endColumn":41},{"ruleId":"365","severity":1,"message":"380","line":82,"column":8,"nodeType":"367","endLine":82,"endColumn":18,"suggestions":"381"},{"ruleId":"365","severity":1,"message":"369","line":25,"column":53,"nodeType":"367","endLine":25,"endColumn":55,"suggestions":"382"},{"ruleId":"355","severity":1,"message":"379","line":27,"column":26,"nodeType":"357","messageId":"358","endLine":27,"endColumn":41},{"ruleId":"365","severity":1,"message":"380","line":80,"column":8,"nodeType":"367","endLine":80,"endColumn":18,"suggestions":"383"},{"ruleId":"365","severity":1,"message":"369","line":48,"column":50,"nodeType":"367","endLine":48,"endColumn":52,"suggestions":"384"},{"ruleId":"355","severity":1,"message":"385","line":65,"column":9,"nodeType":"357","messageId":"358","endLine":65,"endColumn":13},{"ruleId":"365","severity":1,"message":"369","line":91,"column":6,"nodeType":"367","endLine":91,"endColumn":16,"suggestions":"386"},{"ruleId":"355","severity":1,"message":"387","line":3,"column":7,"nodeType":"357","messageId":"358","endLine":3,"endColumn":30},{"ruleId":"355","severity":1,"message":"388","line":4,"column":7,"nodeType":"357","messageId":"358","endLine":4,"endColumn":25},{"ruleId":"355","severity":1,"message":"389","line":9,"column":3,"nodeType":"357","messageId":"358","endLine":9,"endColumn":13},{"ruleId":"355","severity":1,"message":"356","line":12,"column":10,"nodeType":"357","messageId":"358","endLine":12,"endColumn":14},{"ruleId":"355","severity":1,"message":"390","line":14,"column":31,"nodeType":"357","messageId":"358","endLine":14,"endColumn":41},{"ruleId":"355","severity":1,"message":"391","line":25,"column":8,"nodeType":"357","messageId":"358","endLine":25,"endColumn":21},{"ruleId":"355","severity":1,"message":"392","line":26,"column":8,"nodeType":"357","messageId":"358","endLine":26,"endColumn":18},{"ruleId":"355","severity":1,"message":"393","line":29,"column":10,"nodeType":"357","messageId":"358","endLine":29,"endColumn":31},{"ruleId":"365","severity":1,"message":"369","line":114,"column":50,"nodeType":"367","endLine":114,"endColumn":52,"suggestions":"394"},{"ruleId":"355","severity":1,"message":"395","line":116,"column":10,"nodeType":"357","messageId":"358","endLine":116,"endColumn":19},{"ruleId":"355","severity":1,"message":"396","line":116,"column":21,"nodeType":"357","messageId":"358","endLine":116,"endColumn":33},{"ruleId":"365","severity":1,"message":"380","line":154,"column":6,"nodeType":"367","endLine":154,"endColumn":16,"suggestions":"397"},{"ruleId":"352","severity":1,"message":"353","line":19,"column":1,"nodeType":"354","endLine":50,"endColumn":3},{"ruleId":"355","severity":1,"message":"398","line":13,"column":8,"nodeType":"357","messageId":"358","endLine":13,"endColumn":16},{"ruleId":"365","severity":1,"message":"366","line":42,"column":6,"nodeType":"367","endLine":42,"endColumn":8,"suggestions":"399"},{"ruleId":"365","severity":1,"message":"366","line":16,"column":6,"nodeType":"367","endLine":16,"endColumn":8,"suggestions":"400"},{"ruleId":"355","severity":1,"message":"401","line":23,"column":11,"nodeType":"357","messageId":"358","endLine":23,"endColumn":23},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'BreadCrumb' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'permissions' is assigned a value but never used.","'sub' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["402"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["403"],["404"],["405"],["406"],["407"],"'Residentform' is defined but never used.","'setdescriptionCharLimit' is assigned a value but never used.","'contentValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'setInitialState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["408"],["409"],["410"],["411"],"'rows' is assigned a value but never used.",["412"],"'ALLOWED_NAME_CHARACTERS' is assigned a value but never used.","'ALLOWED_CHARACTERS' is assigned a value but never used.","'Typography' is defined but never used.","'FieldArray' is defined but never used.","'AddCircleIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'_getImageFileToBase64' is defined but never used.",["413"],"'condition' is assigned a value but never used.","'setCondition' is assigned a value but never used.",["414"],"'Carousel' is defined but never used.",["415"],["416"],"'handleToggle' is assigned a value but never used.",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"417","fix":"423"},{"desc":"419","fix":"424"},{"desc":"421","fix":"425"},{"desc":"426","fix":"427"},{"desc":"419","fix":"428"},{"desc":"426","fix":"429"},{"desc":"419","fix":"430"},{"desc":"421","fix":"431"},{"desc":"419","fix":"432"},{"desc":"426","fix":"433"},{"desc":"417","fix":"434"},{"desc":"417","fix":"435"},"Update the dependencies array to be: [dispatch, id]",{"range":"436","text":"437"},"Update the dependencies array to be: [dispatch]",{"range":"438","text":"439"},"Update the dependencies array to be: [dispatch, response]",{"range":"440","text":"441"},{"range":"442","text":"437"},{"range":"443","text":"439"},{"range":"444","text":"441"},"Update the dependencies array to be: [history, response]",{"range":"445","text":"446"},{"range":"447","text":"439"},{"range":"448","text":"446"},{"range":"449","text":"439"},{"range":"450","text":"441"},{"range":"451","text":"439"},{"range":"452","text":"446"},{"range":"453","text":"437"},{"range":"454","text":"437"},[496,498],"[dispatch, id]",[6567,6569],"[dispatch]",[6959,6969],"[dispatch, response]",[464,466],[6230,6232],[6622,6632],[2638,2648],"[history, response]",[1037,1039],[2513,2523],[1318,1320],[2395,2405],[2673,2675],[3643,3653],[994,996],[488,490]]